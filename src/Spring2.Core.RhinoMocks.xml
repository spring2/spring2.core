<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Spring2.Core.RhinoMocks</name>
    </assembly>
    <members>
        <member name="P:Spring2.Core.RhinoMocks.TestMockUtility.CleanUps">
            <summary>
            Gets the list of clean up Action delegates.
            </summary>
            <value>
            The clean up delegates.
            </value>
        </member>
        <member name="M:Spring2.Core.RhinoMocks.TestMockUtility.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Spring2.Core.RhinoMocks.TestMockUtility"/> class.
            </summary>
        </member>
        <member name="M:Spring2.Core.RhinoMocks.TestMockUtility.TearDown">
            <summary>
            Clears the Rhino Mocks repository and runs tear downs.
            </summary>
        </member>
        <member name="M:Spring2.Core.RhinoMocks.TestMockUtility.ResetExpectations(System.Object,Rhino.Mocks.BackToRecordOptions)">
            <summary>
            Resets the expectations on a mock or stub.
            </summary>
            <param name="mock">The mock or stub which is to have its expectations reset.</param>
            <param name="options">The reset options.</param>
        </member>
        <member name="M:Spring2.Core.RhinoMocks.TestMockUtility.ResetExpectationsAll(Rhino.Mocks.BackToRecordOptions)">
            <summary>
            Resets the expectations on all mocks and stubs held by this instance of TestMockUtility.
            </summary>
            <param name="options">The reset options.</param>
        </member>
        <member name="M:Spring2.Core.RhinoMocks.TestMockUtility.StrictMock``1(System.Object[])">
            <summary>
            Creates a strict mock object of type T.
            </summary>
            <param name="arguments">The constructor arguments.</param>
            <returns>The mocked object.</returns>
        </member>
        <member name="M:Spring2.Core.RhinoMocks.TestMockUtility.StrictMultiMock``1(System.Type[])">
            <summary>
            Creates a strict mock object of type T, and any other interfaces it may implement.
            </summary>
            <param name="extraTypes">The extra types.</param>
            <returns>The mocked object.</returns>
        </member>
        <member name="M:Spring2.Core.RhinoMocks.TestMockUtility.StrictMultiMock``1(System.Type[],System.Object[])">
            <summary>
            Creates a strict mock object of type T, and any other interfaces it may implement.
            </summary>
            <param name="extraTypes">The extra types.</param>
            <param name="arguments">The constructor arguments.</param>
            <returns>The mocked object.</returns>
        </member>
        <member name="M:Spring2.Core.RhinoMocks.TestMockUtility.StrictMockAndRegister``1(System.Object[])">
            <summary>
            Creates a strict mock object of type T, and registers it in the ClassRegistry.
            </summary>
            <param name="arguments">The constructor arguments.</param>
            <returns>The mocked object that has been registered with the ClassRegistry.</returns>
        </member>
        <member name="M:Spring2.Core.RhinoMocks.TestMockUtility.StrictMultiMockAndRegister``1(System.Type[],System.Object[])">
            <summary>
            Creates a strict mock object of type T, and any other interfaces it may implement. It is also registered into the ClassRegistry.
            </summary>
            <param name="extraTypes">The extra types.</param>
            <param name="arguments">The constructor arguments.</param>
            <returns>The mocked object that has been registered with the ClassRegistry.</returns>
        </member>
        <member name="M:Spring2.Core.RhinoMocks.TestMockUtility.PartialMock``1(System.Object[])">
            <summary>
            Creates a Parial mock object of type T, where T is a class.
            </summary>
            <typeparam name="T">Where T is a class.</typeparam>
            <param name="arguments">The arguments.</param>
            <returns>The mocked class object.</returns>
        </member>
        <member name="M:Spring2.Core.RhinoMocks.TestMockUtility.PartialMultiMock``1(System.Type[])">
            <summary>
            Creates a Parial mock object of type T, where T is a class, and any other interfaces it may implement.
            </summary>
            <typeparam name="T">Where T is a class.</typeparam>
            <param name="extraTypes">The extra types.</param>
            <returns>The mocked class object.</returns>
        </member>
        <member name="M:Spring2.Core.RhinoMocks.TestMockUtility.PartialMultiMock``1(System.Type[],System.Object[])">
            <summary>
            Creates a Parial mock object of type T, where T is a class, and any other interfaces it may implement.
            </summary>
            <typeparam name="T">Where T is a class.</typeparam>
            <param name="extraTypes">The extra types.</param>
            <param name="arguments">The contructor arguments.</param>
            <returns>The mocked class object.</returns>
        </member>
        <member name="M:Spring2.Core.RhinoMocks.TestMockUtility.PartialMockAndRegister``1(System.Object[])">
            <summary>
            Creates a partial mock object of type T, and registers it in the ClassRegistry.
            </summary>
            <param name="arguments">The constructor arguments.</param>
            <returns>The mocked object that has been registered with the ClassRegistry.</returns>
        </member>
        <member name="M:Spring2.Core.RhinoMocks.TestMockUtility.PartialMultiMockAndRegister``1(System.Type[],System.Object[])">
            <summary>
            Creates a partial mock object of type T, and any other interfaces it may implement. It is also registered into the ClassRegistry.
            </summary>
            <param name="extraTypes">The extra types.</param>
            <param name="arguments">The constructor arguments.</param>
            <returns>The mocked object that has been registered with the ClassRegistry.</returns>
        </member>
        <member name="M:Spring2.Core.RhinoMocks.TestMockUtility.DynamicMock``1(System.Object[])">
            <summary>
            Creates a dynamic mock object of type T, where T is a class.
            </summary>
            <typeparam name="T">Where T is a class.</typeparam>
            <param name="arguments">The arguments.</param>
            <returns>The mocked class object.</returns>
        </member>
        <member name="M:Spring2.Core.RhinoMocks.TestMockUtility.DynamicMultiMock``1(System.Type[])">
            <summary>
            Creates a dynamic mock object of type T, where T is a class, and any other interfaces it may implement.
            </summary>
            <typeparam name="T">Where T is a class.</typeparam>
            <param name="extraTypes">The extra types.</param>
            <returns>The mocked class object.</returns>
        </member>
        <member name="M:Spring2.Core.RhinoMocks.TestMockUtility.DynamicMultiMock``1(System.Type[],System.Object[])">
            <summary>
            Creates a dynamic mock object of type T, where T is a class, and any other interfaces it may implement.
            </summary>
            <typeparam name="T">Where T is a class.</typeparam>
            <param name="extraTypes">The extra types.</param>
            <param name="arguments">The contructor arguments.</param>
            <returns>The mocked class object.</returns>
        </member>
        <member name="M:Spring2.Core.RhinoMocks.TestMockUtility.DynamicMockAndRegister``1(System.Object[])">
            <summary>
            Creates a dynamic mock object of type T, and registers it in the ClassRegistry.
            </summary>
            <param name="arguments">The constructor arguments.</param>
            <returns>The mocked object that has been registered with the ClassRegistry.</returns>
        </member>
        <member name="M:Spring2.Core.RhinoMocks.TestMockUtility.DynamicMultiMockAndRegister``1(System.Type[],System.Object[])">
            <summary>
            Creates a dynamic mock object of type T, and any other interfaces it may implement. It is also registered into the ClassRegistry.
            </summary>
            <param name="extraTypes">The extra types.</param>
            <param name="arguments">The constructor arguments.</param>
            <returns>The mocked object that has been registered with the ClassRegistry.</returns>
        </member>
        <member name="M:Spring2.Core.RhinoMocks.TestMockUtility.Stub``1(System.Object[])">
            <summary>
            Stubs the specified arguments.
            </summary>
            <param name="arguments">The constructor arguments.</param>
            <returns>The stubbed object.</returns>
        </member>
        <member name="M:Spring2.Core.RhinoMocks.TestMockUtility.StubAndRegister``1(System.Object[])">
            <summary>
            Stubs an object of type T and registers it in the ClassRegistry.
            </summary>
            <param name="arguments">The constructor arguments.</param>
            <returns>The stubbed object that has been registered with the ClassRegistry.</returns>
        </member>
    </members>
</doc>
