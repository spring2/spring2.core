
using System;
using System.Text;
using System.Collections.Generic;
using ${options.RootNameSpace}.Types;
using ${options.RootNameSpace}.DataObject;
using Spring2.Core.Message;
using Spring2.Core.Types;

namespace ${options.RootNameSpace}.Exceptions {
    public class $element.Name : Message {

#foreach($property in $element.Fields)
#if ($property.Type)
       private $property.Type.Name $property.GetFieldFormat() = $property.Type.NewInstanceFormat;
#end
#end

#foreach($property in $element.Fields)
#if ($property.Type)
        public $property.Type.Name $property.GetMethodFormat() { 
#end
	    get { return this.$property.GetFieldFormat(); }
	    set { this.$property.GetFieldFormat() = value; }
	}
#end  
  
	public $element.Name (#foreach($property in $element.Fields)#if($velocityCount>1), #end$property.Type.Name ${property.GetFieldFormat()}#end) : base("$element.Text" #foreach($property in $element.Fields), ${property.GetFieldFormat()}#end) {
#foreach($property in $element.Fields)
#if ($property.Type)
	    this.$property.GetFieldFormat() = $property.GetFieldFormat() ;
#end
#end       
	} 
    }     
}


