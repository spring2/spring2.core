<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Spring2.Core.Maverick</name>
    </assembly>
    <members>
        <member name="T:Spring2.Core.Maverick.Controller.AbstractController">
            <summary>
            Abstract base controller
            </summary>
        </member>
        <member name="M:Spring2.Core.Maverick.Controller.AbstractController.Perform">
            <summary>
            This is the method you should override to implement application logic.
            Default implementation just returns "success".
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spring2.Core.Maverick.Controller.AbstractController.HandleParseErrorsAndMissingRequiredPropertyErrors(Spring2.Core.Message.MessageList)">
            <summary>
            Handle parsing errors and missing required property errors returned from property populator
            </summary>
        </member>
        <member name="M:Spring2.Core.Maverick.Controller.AbstractController.GetCookie(System.String)">
            <summary>
            Get a cookie for getting data. 
            </summary>
            <param name="cookieName"></param>
            <returns></returns>
        </member>
        <member name="M:Spring2.Core.Maverick.Controller.AbstractController.UpdateCookie(System.Web.HttpCookie)">
            <summary>
            Persists a cookie.  This can only be expected to work once for each cookie between post.
            </summary>
            <param name="cookie"></param>
        </member>
        <member name="T:Spring2.Core.Maverick.Controller.ErrorableController">
            <summary>
            Abstract base controller that will catch an unhandled exception
            </summary>
        </member>
        <member name="P:Spring2.Core.Maverick.Controller.ErrorableController.Errors">
            <summary>
            collection of validation errors
            </summary>
        </member>
        <member name="M:Spring2.Core.Maverick.Controller.ErrorableController.HandleParseErrorsAndMissingRequiredPropertyErrors(Spring2.Core.Message.MessageList)">
            <summary>
            Handle parsing exceptions
            </summary>
        </member>
        <member name="M:Spring2.Core.Maverick.Controller.ErrorableController.PersistErrorsInHttp(Spring2.Core.Message.MessageList)">
            <summary>
            Persist Errors in the HttpContext
            </summary> 
        </member>
        <member name="T:Spring2.Core.Maverick.Controller.LocalizedController">
            <summary>
            Summary description for LocalizedController.
            </summary>
        </member>
        <member name="T:Spring2.Core.Maverick.DataForm.LocalizedForm">
            <summary>
            Summary description for LocalizedForm.
            </summary>
        </member>
        <member name="T:Spring2.Core.Maverick.DataForm.PopulatedForm">
            <summary>
            Base data form that populates itself from the request
            </summary>
        </member>
        <member name="M:Spring2.Core.Maverick.DataForm.PopulatedForm.Populate">
            <summary>
            Method to handle population
            </summary>
        </member>
        <member name="M:Spring2.Core.Maverick.DataForm.PopulatedForm.GetCookie(System.String)">
            <summary>
            Get a cookie for getting data. 
            </summary>
            <param name="cookieName"></param>
            <returns></returns>
        </member>
        <member name="T:Spring2.Core.Maverick.MockHttpWorkerRequest">
            <summary>
            Summary description for MockHttpWorkerRequest.
            For more ideas, see:
            http://haacked.com/archive/2005/06/11/Simulating_HttpContext.aspx
            </summary>
        </member>
        <member name="M:Spring2.Core.Maverick.MockHttpWorkerRequest.Initialize">
            <summary>
            Sets up the initial values that are to be found in the header
            </summary>
        </member>
    </members>
</doc>
