<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Spring2.Core.Mail</name>
    </assembly>
    <members>
        <member name="M:Spring2.Core.Mail.BusinessLogic.MailAttachment.ReadFully(System.IO.Stream,System.Int64)">
            <summary>
            Reads data from a stream until the end is reached. The
            data is returned as a byte array. An IOException is
            thrown if any of the underlying IO calls fail.
            </summary>
            <param name="stream">The stream to read data from</param>
            <param name="initialLength">The initial buffer length</param>
        </member>
        <member name="M:Spring2.Core.Mail.BusinessLogic.MailAttachment.StringToByteArray(System.String)">
            <summary>
            Convert a string to a byte array
            </summary>
            <param name="s">String to be converted</param>
            <returns></returns>
        </member>
        <member name="M:Spring2.Core.Mail.BusinessLogic.MailAttachment.ByteArrayToString(System.Byte[])">
            <summary>
            Convert a byte array to a string
            </summary>
            <param name="bytes"></param>
            <returns></returns>
        </member>
        <member name="M:Spring2.Core.Mail.BusinessLogic.MailMessage.Create(Spring2.Core.Mail.DataObject.MailMessageData)">
            <summary>
            Creates and persists a new MailMessage
            </summary>
        </member>
        <member name="M:Spring2.Core.Mail.BusinessLogic.MailMessage.Create(Spring2.Core.Mail.DataObject.MailMessageData,Spring2.Core.Types.StringType)">
            <summary>
            Creates and persists a new MailMessage and signs it using a 'from' address from the message routing table
            </summary>
        </member>
        <member name="M:Spring2.Core.Mail.BusinessLogic.MailMessage.Create(Spring2.Core.Types.StringType,Spring2.Core.Types.StringType,Spring2.Core.Types.StringType,Spring2.Core.Types.StringType,Spring2.Core.Mail.Types.MailBodyFormatEnum,Spring2.Core.Types.DateTimeType)">
            <summary>
            Creates and persists a new MailMessage
            </summary>
        </member>
        <member name="M:Spring2.Core.Mail.BusinessLogic.MailMessage.Create(Spring2.Core.Types.StringType,Spring2.Core.Types.StringType,Spring2.Core.Types.StringType,Spring2.Core.Types.StringType,Spring2.Core.Mail.Types.MailBodyFormatEnum)">
            <summary>
            Creates and persists a new MailMessage
            </summary>
        </member>
        <member name="M:Spring2.Core.Mail.BusinessLogic.MailMessage.Create(Spring2.Core.Types.StringType,Spring2.Core.Types.StringType,Spring2.Core.Types.StringType,Spring2.Core.Mail.Types.MailBodyFormatEnum)">
            <summary>
            Creates and persists a new MailMessage
            </summary>
        </member>
        <member name="M:Spring2.Core.Mail.BusinessLogic.MailMessage.Create(Spring2.Core.Types.StringType,Spring2.Core.Types.StringType,Spring2.Core.Types.StringType,Spring2.Core.Types.StringType,Spring2.Core.Types.StringType,Spring2.Core.Mail.Types.MailBodyFormatEnum)">
            <summary>
            Creates and persists a new MailMessage
            </summary>
        </member>
        <member name="M:Spring2.Core.Mail.BusinessLogic.MailMessage.Create(Spring2.Core.Types.StringType,Spring2.Core.Types.StringType,Spring2.Core.Types.StringType,Spring2.Core.Types.StringType,Spring2.Core.Types.StringType,Spring2.Core.Mail.Types.MailBodyFormatEnum,System.String[])">
            <summary>
            Creates and persists a new MailMessage
            </summary>
        </member>
        <member name="M:Spring2.Core.Mail.BusinessLogic.MailMessage.Create(Spring2.Core.Types.StringType,Spring2.Core.Types.StringType,Spring2.Core.Types.StringType,Spring2.Core.Types.StringType,Spring2.Core.Types.StringType,Spring2.Core.Mail.Types.MailBodyFormatEnum,Spring2.Core.Types.DateTimeType)">
            <summary>
            Creates and persists a new MailMessage
            </summary>
        </member>
        <member name="M:Spring2.Core.Mail.BusinessLogic.MailMessage.Create(Spring2.Core.Types.StringType,Spring2.Core.Types.StringType,Spring2.Core.Types.StringType,Spring2.Core.Types.StringType,Spring2.Core.Types.StringType,Spring2.Core.Types.StringType,Spring2.Core.Types.StringType,Spring2.Core.Mail.Types.MailBodyFormatEnum,Spring2.Core.Types.DateTimeType,System.String[],Spring2.Core.Types.StringType)">
            <summary>
            Creates and persists a new MailMessage
            This is THE method that really does the work
            </summary>
        </member>
        <member name="M:Spring2.Core.Mail.BusinessLogic.MailMessage.Release(Spring2.Core.Types.IdTypeList,Spring2.Core.Types.IdType)">
            <summary>
            Sets all mail messages that are in the list of Ids to have Status of Released.
            </summary>
            <param name="list"></param>
            <param name="userId"></param>
        </member>
        <member name="M:Spring2.Core.Mail.BusinessLogic.MailMessage.Reject(Spring2.Core.Types.IdTypeList,Spring2.Core.Types.IdType)">
            <summary>
            Sets all mail messages that are in the list of Ids to have Status of Rejected and set Processed time.
            </summary>
            <param name="list"></param>
            <param name="userId"></param>
        </member>
        <member name="M:Spring2.Core.Mail.BusinessLogic.MailMessage.NotAllowed(Spring2.Core.Types.IdTypeList)">
            <summary>
            Sets all mail messages that are in the list of Ids to have Status of NotAllowedFromTestServer and set Processed time.
            </summary>
            <param name="list"></param>
        </member>
        <member name="M:Spring2.Core.Mail.BusinessLogic.MailMessage.Hold(Spring2.Core.Types.IdType)">
            <summary>
            Mark a message a held
            </summary>
        </member>
        <member name="M:Spring2.Core.Mail.BusinessLogic.MailMessage.GetMailMessagesByStatus(Spring2.Core.Mail.Types.MailMessageStatusEnum)">
            <summary>
            Get mail messages that are of the status that is passed to this function.
            </summary>
        </member>
        <member name="T:Spring2.Core.Mail.Dao.IMailAttachmentDAO">
            <summary>
            Data access interface for MailAttachment business entity.
            </summary>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.IMailAttachmentDAO.GetList">
            <summary>
            Returns a list of all MailAttachment rows.
            </summary>
            <returns>List of MailAttachment objects.</returns>
            <exception cref="T:Spring2.Core.DAO.FinderException">Thrown when no rows are found.</exception>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.IMailAttachmentDAO.GetList(Spring2.Core.DAO.SqlFilter)">
            <summary>
            Returns a filtered list of MailAttachment rows.
            </summary>
            <param name="filter">Filtering criteria.</param>
            <returns>List of MailAttachment objects.</returns>
            <exception cref="T:Spring2.Core.DAO.FinderException">Thrown when no rows are found matching the where criteria.</exception>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.IMailAttachmentDAO.GetList(Spring2.Core.DAO.IOrderBy)">
            <summary>
            Returns an ordered list of MailAttachment rows.  All rows in the database are returned
            </summary>
            <param name="orderByClause">Ordering criteria.</param>
            <returns>List of MailAttachment objects.</returns>
            <exception cref="T:Spring2.Core.DAO.FinderException">Thrown when no rows are found.</exception>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.IMailAttachmentDAO.GetList(Spring2.Core.DAO.SqlFilter,Spring2.Core.DAO.IOrderBy)">
            <summary>
            Returns an ordered and filtered list of MailAttachment rows.
            </summary>
            <param name="filter">Filtering criteria.</param>
            <param name="orderByClause">Ordering criteria.</param>
            <returns>List of MailAttachment objects.</returns>
            <exception cref="T:Spring2.Core.DAO.FinderException">Thrown when no rows are found matching the where criteria.</exception>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.IMailAttachmentDAO.GetList(System.Int32)">
            <summary>
            Returns a list of all MailAttachment rows.
            </summary>
            <param name="maxRows">Uses TOP to limit results to specified number of rows</param>
            <returns>List of MailAttachment objects.</returns>
            <exception cref="T:Spring2.Core.DAO.FinderException">Thrown when no rows are found.</exception>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.IMailAttachmentDAO.GetList(Spring2.Core.DAO.SqlFilter,System.Int32)">
            <summary>
            Returns a filtered list of MailAttachment rows.
            </summary>
            <param name="filter">Filtering criteria.</param>
            <param name="maxRows">Uses TOP to limit results to specified number of rows</param>
            <returns>List of MailAttachment objects.</returns>
            <exception cref="T:Spring2.Core.DAO.FinderException">Thrown when no rows are found matching the where criteria.</exception>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.IMailAttachmentDAO.GetList(Spring2.Core.DAO.IOrderBy,System.Int32)">
            <summary>
            Returns an ordered list of MailAttachment rows.  All rows in the database are returned
            </summary>
            <param name="orderByClause">Ordering criteria.</param>
            <param name="maxRows">Uses TOP to limit results to specified number of rows</param>
            <returns>List of MailAttachment objects.</returns>
            <exception cref="T:Spring2.Core.DAO.FinderException">Thrown when no rows are found.</exception>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.IMailAttachmentDAO.GetList(Spring2.Core.DAO.SqlFilter,Spring2.Core.DAO.IOrderBy,System.Int32)">
            <summary>
            Returns an ordered and filtered list of MailAttachment rows.
            </summary>
            <param name="filter">Filtering criteria.</param>
            <param name="orderByClause">Ordering criteria.</param>
            <param name="maxRows">Uses TOP to limit results to specified number of rows</param>
            <returns>List of MailAttachment objects.</returns>
            <exception cref="T:Spring2.Core.DAO.FinderException">Thrown when no rows are found matching the where criteria.</exception>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.IMailAttachmentDAO.Load(Spring2.Core.Types.IdType)">
            <summary>
            Finds a MailAttachment entity using it's primary key.
            </summary>
            <param name="mailAttachmentId">A key field.</param>
            <returns>A MailAttachment object.</returns>
            <exception cref="T:Spring2.Core.DAO.FinderException">Thrown when no entity exists witht he specified primary key..</exception>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.IMailAttachmentDAO.Reload(Spring2.Core.Mail.BusinessLogic.MailAttachment)">
            <summary>
            Repopulates an existing business entity instance
            </summary>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.IMailAttachmentDAO.GetDataObjectFromReader(Spring2.Core.Mail.BusinessLogic.MailAttachment,System.Data.IDataReader)">
            <summary>
            Builds a data object from the current row in a data reader..
            </summary>
            <param name="data">Entity to be populated from data reader</param>
            <param name="dataReader">Container for database row.</param>
            <returns>Data object built from current row.</returns>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.IMailAttachmentDAO.GetDataObjectFromReader(System.Data.IDataReader)">
            <summary>
            Builds a data object from the current row in a data reader..
            </summary>
            <param name="dataReader">Container for database row.</param>
            <returns>Data object built from current row.</returns>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.IMailAttachmentDAO.GetDataObjectFromReader(System.Data.IDataReader,Spring2.Core.Mail.Dao.MailAttachmentDAO.ColumnOrdinals)">
            <summary>
            Builds a data object from the current row in a data reader..
            </summary>
            <param name="dataReader">Container for database row.</param>
            <param name="ordinals">An instance of ColumnOrdinals initialized for this data reader</param>
            <returns>Data object built from current row.</returns>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.IMailAttachmentDAO.GetDataObjectFromReader(Spring2.Core.Mail.BusinessLogic.MailAttachment,System.Data.IDataReader,Spring2.Core.Mail.Dao.MailAttachmentDAO.ColumnOrdinals)">
            <summary>
            Builds a data object from the current row in a data reader..
            </summary>
            <param name="data">Entity to be populated from data reader</param>
            <param name="dataReader">Container for database row.</param>
            <param name="ordinals">An instance of ColumnOrdinals initialized for this data reader</param>
            <returns>Data object built from current row.</returns>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.IMailAttachmentDAO.Insert(Spring2.Core.Mail.BusinessLogic.MailAttachment)">
            <summary>
            Inserts a record into the MailAttachment table.
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.IMailAttachmentDAO.Update(Spring2.Core.Mail.BusinessLogic.MailAttachment)">
            <summary>
            Updates a record in the MailAttachment table.
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.IMailAttachmentDAO.Delete(Spring2.Core.Types.IdType)">
            <summary>
            Deletes a record from the MailAttachment table by MailAttachmentId.
            </summary>
            <param name="mailAttachmentId">A key field.</param>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.IMailAttachmentDAO.FindByMailMessageId(Spring2.Core.Types.IdType)">
            <summary>
            Returns a list of objects which match the values for the fields specified.
            </summary>
            <param name="mailMessageId">A field value to be matched.</param>
            <returns>The list of MailAttachmentDAO objects found.</returns>
        </member>
        <member name="T:Spring2.Core.Mail.Dao.IMailMessageDAO">
            <summary>
            Data access interface for MailMessage business entity.
            </summary>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.IMailMessageDAO.GetList">
            <summary>
            Returns a list of all MailMessage rows.
            </summary>
            <returns>List of MailMessage objects.</returns>
            <exception cref="T:Spring2.Core.DAO.FinderException">Thrown when no rows are found.</exception>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.IMailMessageDAO.GetList(Spring2.Core.DAO.SqlFilter)">
            <summary>
            Returns a filtered list of MailMessage rows.
            </summary>
            <param name="filter">Filtering criteria.</param>
            <returns>List of MailMessage objects.</returns>
            <exception cref="T:Spring2.Core.DAO.FinderException">Thrown when no rows are found matching the where criteria.</exception>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.IMailMessageDAO.GetList(Spring2.Core.DAO.IOrderBy)">
            <summary>
            Returns an ordered list of MailMessage rows.  All rows in the database are returned
            </summary>
            <param name="orderByClause">Ordering criteria.</param>
            <returns>List of MailMessage objects.</returns>
            <exception cref="T:Spring2.Core.DAO.FinderException">Thrown when no rows are found.</exception>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.IMailMessageDAO.GetList(Spring2.Core.DAO.SqlFilter,Spring2.Core.DAO.IOrderBy)">
            <summary>
            Returns an ordered and filtered list of MailMessage rows.
            </summary>
            <param name="filter">Filtering criteria.</param>
            <param name="orderByClause">Ordering criteria.</param>
            <returns>List of MailMessage objects.</returns>
            <exception cref="T:Spring2.Core.DAO.FinderException">Thrown when no rows are found matching the where criteria.</exception>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.IMailMessageDAO.GetList(System.Int32)">
            <summary>
            Returns a list of all MailMessage rows.
            </summary>
            <param name="maxRows">Uses TOP to limit results to specified number of rows</param>
            <returns>List of MailMessage objects.</returns>
            <exception cref="T:Spring2.Core.DAO.FinderException">Thrown when no rows are found.</exception>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.IMailMessageDAO.GetList(Spring2.Core.DAO.SqlFilter,System.Int32)">
            <summary>
            Returns a filtered list of MailMessage rows.
            </summary>
            <param name="filter">Filtering criteria.</param>
            <param name="maxRows">Uses TOP to limit results to specified number of rows</param>
            <returns>List of MailMessage objects.</returns>
            <exception cref="T:Spring2.Core.DAO.FinderException">Thrown when no rows are found matching the where criteria.</exception>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.IMailMessageDAO.GetList(Spring2.Core.DAO.IOrderBy,System.Int32)">
            <summary>
            Returns an ordered list of MailMessage rows.  All rows in the database are returned
            </summary>
            <param name="orderByClause">Ordering criteria.</param>
            <param name="maxRows">Uses TOP to limit results to specified number of rows</param>
            <returns>List of MailMessage objects.</returns>
            <exception cref="T:Spring2.Core.DAO.FinderException">Thrown when no rows are found.</exception>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.IMailMessageDAO.GetList(Spring2.Core.DAO.SqlFilter,Spring2.Core.DAO.IOrderBy,System.Int32)">
            <summary>
            Returns an ordered and filtered list of MailMessage rows.
            </summary>
            <param name="filter">Filtering criteria.</param>
            <param name="orderByClause">Ordering criteria.</param>
            <param name="maxRows">Uses TOP to limit results to specified number of rows</param>
            <returns>List of MailMessage objects.</returns>
            <exception cref="T:Spring2.Core.DAO.FinderException">Thrown when no rows are found matching the where criteria.</exception>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.IMailMessageDAO.Load(Spring2.Core.Types.IdType)">
            <summary>
            Finds a MailMessage entity using it's primary key.
            </summary>
            <param name="mailMessageId">A key field.</param>
            <returns>A MailMessage object.</returns>
            <exception cref="T:Spring2.Core.DAO.FinderException">Thrown when no entity exists witht he specified primary key..</exception>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.IMailMessageDAO.Reload(Spring2.Core.Mail.BusinessLogic.MailMessage)">
            <summary>
            Repopulates an existing business entity instance
            </summary>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.IMailMessageDAO.GetDataObjectFromReader(Spring2.Core.Mail.BusinessLogic.MailMessage,System.Data.IDataReader)">
            <summary>
            Builds a data object from the current row in a data reader..
            </summary>
            <param name="data">Entity to be populated from data reader</param>
            <param name="dataReader">Container for database row.</param>
            <returns>Data object built from current row.</returns>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.IMailMessageDAO.GetDataObjectFromReader(System.Data.IDataReader)">
            <summary>
            Builds a data object from the current row in a data reader..
            </summary>
            <param name="dataReader">Container for database row.</param>
            <returns>Data object built from current row.</returns>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.IMailMessageDAO.GetDataObjectFromReader(System.Data.IDataReader,Spring2.Core.Mail.Dao.MailMessageDAO.ColumnOrdinals)">
            <summary>
            Builds a data object from the current row in a data reader..
            </summary>
            <param name="dataReader">Container for database row.</param>
            <param name="ordinals">An instance of ColumnOrdinals initialized for this data reader</param>
            <returns>Data object built from current row.</returns>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.IMailMessageDAO.GetDataObjectFromReader(Spring2.Core.Mail.BusinessLogic.MailMessage,System.Data.IDataReader,Spring2.Core.Mail.Dao.MailMessageDAO.ColumnOrdinals)">
            <summary>
            Builds a data object from the current row in a data reader..
            </summary>
            <param name="data">Entity to be populated from data reader</param>
            <param name="dataReader">Container for database row.</param>
            <param name="ordinals">An instance of ColumnOrdinals initialized for this data reader</param>
            <returns>Data object built from current row.</returns>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.IMailMessageDAO.Insert(Spring2.Core.Mail.BusinessLogic.MailMessage)">
            <summary>
            Inserts a record into the MailMessage table.
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.IMailMessageDAO.Update(Spring2.Core.Mail.BusinessLogic.MailMessage)">
            <summary>
            Updates a record in the MailMessage table.
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.IMailMessageDAO.Delete(Spring2.Core.Types.IdType)">
            <summary>
            Deletes a record from the MailMessage table by MailMessageId.
            </summary>
            <param name="mailMessageId">A key field.</param>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.IMailMessageDAO.FindByStatus(Spring2.Core.Mail.Types.MailMessageStatusEnum)">
            <summary>
            Returns a list of objects which match the values for the fields specified.
            </summary>
            <param name="mailMessageStatus">A field value to be matched.</param>
            <returns>The list of MailMessageDAO objects found.</returns>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.IMailMessageDAO.FindByUniqueKey(Spring2.Core.Types.StringType)">
            <summary>
            Returns an object which matches the values for the fields specified.
            </summary>
            <param name="uniqueKey">A field value to be matched.</param>
            <returns>The object found.</returns>
            <exception cref="T:Spring2.Core.DAO.FinderException">Thrown when no rows are found.</exception>
        </member>
        <member name="T:Spring2.Core.Mail.Dao.IMailMessageRouteDAO">
            <summary>
            Data access interface for MailMessageRoute business entity.
            </summary>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.IMailMessageRouteDAO.GetList">
            <summary>
            Returns a list of all MailMessageRoute rows.
            </summary>
            <returns>List of MailMessageRoute objects.</returns>
            <exception cref="T:Spring2.Core.DAO.FinderException">Thrown when no rows are found.</exception>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.IMailMessageRouteDAO.GetList(Spring2.Core.DAO.SqlFilter)">
            <summary>
            Returns a filtered list of MailMessageRoute rows.
            </summary>
            <param name="filter">Filtering criteria.</param>
            <returns>List of MailMessageRoute objects.</returns>
            <exception cref="T:Spring2.Core.DAO.FinderException">Thrown when no rows are found matching the where criteria.</exception>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.IMailMessageRouteDAO.GetList(Spring2.Core.DAO.IOrderBy)">
            <summary>
            Returns an ordered list of MailMessageRoute rows.  All rows in the database are returned
            </summary>
            <param name="orderByClause">Ordering criteria.</param>
            <returns>List of MailMessageRoute objects.</returns>
            <exception cref="T:Spring2.Core.DAO.FinderException">Thrown when no rows are found.</exception>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.IMailMessageRouteDAO.GetList(Spring2.Core.DAO.SqlFilter,Spring2.Core.DAO.IOrderBy)">
            <summary>
            Returns an ordered and filtered list of MailMessageRoute rows.
            </summary>
            <param name="filter">Filtering criteria.</param>
            <param name="orderByClause">Ordering criteria.</param>
            <returns>List of MailMessageRoute objects.</returns>
            <exception cref="T:Spring2.Core.DAO.FinderException">Thrown when no rows are found matching the where criteria.</exception>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.IMailMessageRouteDAO.GetList(System.Int32)">
            <summary>
            Returns a list of all MailMessageRoute rows.
            </summary>
            <param name="maxRows">Uses TOP to limit results to specified number of rows</param>
            <returns>List of MailMessageRoute objects.</returns>
            <exception cref="T:Spring2.Core.DAO.FinderException">Thrown when no rows are found.</exception>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.IMailMessageRouteDAO.GetList(Spring2.Core.DAO.SqlFilter,System.Int32)">
            <summary>
            Returns a filtered list of MailMessageRoute rows.
            </summary>
            <param name="filter">Filtering criteria.</param>
            <param name="maxRows">Uses TOP to limit results to specified number of rows</param>
            <returns>List of MailMessageRoute objects.</returns>
            <exception cref="T:Spring2.Core.DAO.FinderException">Thrown when no rows are found matching the where criteria.</exception>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.IMailMessageRouteDAO.GetList(Spring2.Core.DAO.IOrderBy,System.Int32)">
            <summary>
            Returns an ordered list of MailMessageRoute rows.  All rows in the database are returned
            </summary>
            <param name="orderByClause">Ordering criteria.</param>
            <param name="maxRows">Uses TOP to limit results to specified number of rows</param>
            <returns>List of MailMessageRoute objects.</returns>
            <exception cref="T:Spring2.Core.DAO.FinderException">Thrown when no rows are found.</exception>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.IMailMessageRouteDAO.GetList(Spring2.Core.DAO.SqlFilter,Spring2.Core.DAO.IOrderBy,System.Int32)">
            <summary>
            Returns an ordered and filtered list of MailMessageRoute rows.
            </summary>
            <param name="filter">Filtering criteria.</param>
            <param name="orderByClause">Ordering criteria.</param>
            <param name="maxRows">Uses TOP to limit results to specified number of rows</param>
            <returns>List of MailMessageRoute objects.</returns>
            <exception cref="T:Spring2.Core.DAO.FinderException">Thrown when no rows are found matching the where criteria.</exception>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.IMailMessageRouteDAO.Load(Spring2.Core.Types.IdType)">
            <summary>
            Finds a MailMessageRoute entity using it's primary key.
            </summary>
            <param name="mailMessageRouteId">A key field.</param>
            <returns>A MailMessageRoute object.</returns>
            <exception cref="T:Spring2.Core.DAO.FinderException">Thrown when no entity exists witht he specified primary key..</exception>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.IMailMessageRouteDAO.Reload(Spring2.Core.Mail.BusinessLogic.MailMessageRoute)">
            <summary>
            Repopulates an existing business entity instance
            </summary>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.IMailMessageRouteDAO.GetDataObjectFromReader(Spring2.Core.Mail.BusinessLogic.MailMessageRoute,System.Data.IDataReader)">
            <summary>
            Builds a data object from the current row in a data reader..
            </summary>
            <param name="data">Entity to be populated from data reader</param>
            <param name="dataReader">Container for database row.</param>
            <returns>Data object built from current row.</returns>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.IMailMessageRouteDAO.GetDataObjectFromReader(System.Data.IDataReader)">
            <summary>
            Builds a data object from the current row in a data reader..
            </summary>
            <param name="dataReader">Container for database row.</param>
            <returns>Data object built from current row.</returns>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.IMailMessageRouteDAO.GetDataObjectFromReader(System.Data.IDataReader,Spring2.Core.Mail.Dao.MailMessageRouteDAO.ColumnOrdinals)">
            <summary>
            Builds a data object from the current row in a data reader..
            </summary>
            <param name="dataReader">Container for database row.</param>
            <param name="ordinals">An instance of ColumnOrdinals initialized for this data reader</param>
            <returns>Data object built from current row.</returns>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.IMailMessageRouteDAO.GetDataObjectFromReader(Spring2.Core.Mail.BusinessLogic.MailMessageRoute,System.Data.IDataReader,Spring2.Core.Mail.Dao.MailMessageRouteDAO.ColumnOrdinals)">
            <summary>
            Builds a data object from the current row in a data reader..
            </summary>
            <param name="data">Entity to be populated from data reader</param>
            <param name="dataReader">Container for database row.</param>
            <param name="ordinals">An instance of ColumnOrdinals initialized for this data reader</param>
            <returns>Data object built from current row.</returns>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.IMailMessageRouteDAO.Insert(Spring2.Core.Mail.BusinessLogic.MailMessageRoute)">
            <summary>
            Inserts a record into the MailMessageRoute table.
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.IMailMessageRouteDAO.Update(Spring2.Core.Mail.BusinessLogic.MailMessageRoute)">
            <summary>
            Updates a record in the MailMessageRoute table.
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.IMailMessageRouteDAO.Delete(Spring2.Core.Types.IdType)">
            <summary>
            Deletes a record from the MailMessageRoute table by MailMessageRouteId.
            </summary>
            <param name="mailMessageRouteId">A key field.</param>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.IMailMessageRouteDAO.FindByMailMessage(Spring2.Core.Types.StringType)">
            <summary>
            Returns a list of objects which match the values for the fields specified.
            </summary>
            <param name="mailMessage">A field value to be matched.</param>
            <returns>The list of MailMessageRouteDAO objects found.</returns>
        </member>
        <member name="T:Spring2.Core.Mail.Dao.MailAttachmentDAO">
            <summary>
            Data access class for MailAttachment business entity.
            </summary>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.MailAttachmentDAO.#cctor">
            <summary>
            Initializes the static map of property names to sql expressions.
            </summary>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.MailAttachmentDAO.GetList">
            <summary>
            Returns a list of all MailAttachment rows.
            </summary>
            <returns>List of MailAttachment objects.</returns>
            <exception cref="T:Spring2.Core.DAO.FinderException">Thrown when no rows are found.</exception>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.MailAttachmentDAO.GetList(Spring2.Core.DAO.SqlFilter)">
            <summary>
            Returns a filtered list of MailAttachment rows.
            </summary>
            <param name="filter">Filtering criteria.</param>
            <returns>List of MailAttachment objects.</returns>
            <exception cref="T:Spring2.Core.DAO.FinderException">Thrown when no rows are found matching the where criteria.</exception>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.MailAttachmentDAO.GetList(Spring2.Core.DAO.IOrderBy)">
            <summary>
            Returns an ordered list of MailAttachment rows.  All rows in the database are returned
            </summary>
            <param name="orderByClause">Ordering criteria.</param>
            <returns>List of MailAttachment objects.</returns>
            <exception cref="T:Spring2.Core.DAO.FinderException">Thrown when no rows are found.</exception>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.MailAttachmentDAO.GetList(Spring2.Core.DAO.SqlFilter,Spring2.Core.DAO.IOrderBy)">
            <summary>
            Returns an ordered and filtered list of MailAttachment rows.
            </summary>
            <param name="filter">Filtering criteria.</param>
            <param name="orderByClause">Ordering criteria.</param>
            <returns>List of MailAttachment objects.</returns>
            <exception cref="T:Spring2.Core.DAO.FinderException">Thrown when no rows are found matching the where criteria.</exception>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.MailAttachmentDAO.GetList(System.Int32)">
            <summary>
            Returns a list of all MailAttachment rows.
            </summary>
            <param name="maxRows">Uses TOP to limit results to specified number of rows</param>
            <returns>List of MailAttachment objects.</returns>
            <exception cref="T:Spring2.Core.DAO.FinderException">Thrown when no rows are found.</exception>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.MailAttachmentDAO.GetList(Spring2.Core.DAO.SqlFilter,System.Int32)">
            <summary>
            Returns a filtered list of MailAttachment rows.
            </summary>
            <param name="filter">Filtering criteria.</param>
            <param name="maxRows">Uses TOP to limit results to specified number of rows</param>
            <returns>List of MailAttachment objects.</returns>
            <exception cref="T:Spring2.Core.DAO.FinderException">Thrown when no rows are found matching the where criteria.</exception>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.MailAttachmentDAO.GetList(Spring2.Core.DAO.IOrderBy,System.Int32)">
            <summary>
            Returns an ordered list of MailAttachment rows.  All rows in the database are returned
            </summary>
            <param name="orderByClause">Ordering criteria.</param>
            <param name="maxRows">Uses TOP to limit results to specified number of rows</param>
            <returns>List of MailAttachment objects.</returns>
            <exception cref="T:Spring2.Core.DAO.FinderException">Thrown when no rows are found.</exception>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.MailAttachmentDAO.GetList(Spring2.Core.DAO.SqlFilter,Spring2.Core.DAO.IOrderBy,System.Int32)">
            <summary>
            Returns an ordered and filtered list of MailAttachment rows.
            </summary>
            <param name="filter">Filtering criteria.</param>
            <param name="orderByClause">Ordering criteria.</param>
            <param name="maxRows">Uses TOP to limit results to specified number of rows</param>
            <returns>List of MailAttachment objects.</returns>
            <exception cref="T:Spring2.Core.DAO.FinderException">Thrown when no rows are found matching the where criteria.</exception>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.MailAttachmentDAO.Load(Spring2.Core.Types.IdType)">
            <summary>
            Finds a MailAttachment entity using it's primary key.
            </summary>
            <param name="mailAttachmentId">A key field.</param>
            <returns>A MailAttachment object.</returns>
            <exception cref="T:Spring2.Core.DAO.FinderException">Thrown when no entity exists witht he specified primary key..</exception>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.MailAttachmentDAO.Reload(Spring2.Core.Mail.BusinessLogic.MailAttachment)">
            <summary>
            Repopulates an existing business entity instance
            </summary>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.MailAttachmentDAO.GetList(System.Data.IDataReader)">
            <summary>
            Read through the reader and return a data object list
            </summary>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.MailAttachmentDAO.GetDataObject(System.Data.IDataReader)">
            <summary>
            Read from reader and return a single data object
            </summary>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.MailAttachmentDAO.GetDataObject(System.Data.IDataReader,Spring2.Core.Mail.Dao.MailAttachmentDAO.ColumnOrdinals)">
            <summary>
            Read from reader and return a single data object
            </summary>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.MailAttachmentDAO.GetDataObjectFromReader(Spring2.Core.Mail.BusinessLogic.MailAttachment,System.Data.IDataReader)">
            <summary>
            Builds a data object from the current row in a data reader..
            </summary>
            <param name="data">Entity to be populated from data reader</param>
            <param name="dataReader">Container for database row.</param>
            <returns>Data object built from current row.</returns>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.MailAttachmentDAO.GetDataObjectFromReader(System.Data.IDataReader)">
            <summary>
            Builds a data object from the current row in a data reader..
            </summary>
            <param name="dataReader">Container for database row.</param>
            <returns>Data object built from current row.</returns>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.MailAttachmentDAO.GetDataObjectFromReader(System.Data.IDataReader,Spring2.Core.Mail.Dao.MailAttachmentDAO.ColumnOrdinals)">
            <summary>
            Builds a data object from the current row in a data reader..
            </summary>
            <param name="dataReader">Container for database row.</param>
            <param name="ordinals">An instance of ColumnOrdinals initialized for this data reader</param>
            <returns>Data object built from current row.</returns>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.MailAttachmentDAO.GetDataObjectFromReader(Spring2.Core.Mail.BusinessLogic.MailAttachment,System.Data.IDataReader,Spring2.Core.Mail.Dao.MailAttachmentDAO.ColumnOrdinals)">
            <summary>
            Builds a data object from the current row in a data reader..
            </summary>
            <param name="data">Entity to be populated from data reader</param>
            <param name="dataReader">Container for database row.</param>
            <param name="ordinals">An instance of ColumnOrdinals initialized for this data reader</param>
            <returns>Data object built from current row.</returns>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.MailAttachmentDAO.Insert(Spring2.Core.Mail.BusinessLogic.MailAttachment)">
            <summary>
            Inserts a record into the MailAttachment table.
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.MailAttachmentDAO.Insert(Spring2.Core.Mail.BusinessLogic.MailAttachment,System.Data.IDbTransaction)">
            <summary>
            Inserts a record into the MailAttachment table.
            </summary>
            <param name="data"></param>
            <param name="transaction"></param>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.MailAttachmentDAO.Update(Spring2.Core.Mail.BusinessLogic.MailAttachment)">
            <summary>
            Updates a record in the MailAttachment table.
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.MailAttachmentDAO.Update(Spring2.Core.Mail.BusinessLogic.MailAttachment,System.Data.IDbTransaction)">
            <summary>
            Updates a record in the MailAttachment table.
            </summary>
            <param name="data"></param>
            <param name="transaction"></param>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.MailAttachmentDAO.Delete(Spring2.Core.Types.IdType)">
            <summary>
            Deletes a record from the MailAttachment table by MailAttachmentId.
            </summary>
            <param name="mailAttachmentId">A key field.</param>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.MailAttachmentDAO.Delete(Spring2.Core.Types.IdType,System.Data.IDbTransaction)">
            <summary>
            Deletes a record from the MailAttachment table by MailAttachmentId.
            </summary>
            <param name="mailAttachmentId">A key field.</param>
            <param name="transaction"></param>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.MailAttachmentDAO.FindByMailMessageId(Spring2.Core.Types.IdType)">
            <summary>
            Returns a list of objects which match the values for the fields specified.
            </summary>
            <param name="mailMessageId">A field value to be matched.</param>
            <returns>The list of MailAttachmentDAO objects found.</returns>
        </member>
        <member name="T:Spring2.Core.Mail.Dao.MailMessageDAO">
            <summary>
            Data access class for MailMessage business entity.
            </summary>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.MailMessageDAO.#cctor">
            <summary>
            Initializes the static map of property names to sql expressions.
            </summary>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.MailMessageDAO.GetList">
            <summary>
            Returns a list of all MailMessage rows.
            </summary>
            <returns>List of MailMessage objects.</returns>
            <exception cref="T:Spring2.Core.DAO.FinderException">Thrown when no rows are found.</exception>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.MailMessageDAO.GetList(Spring2.Core.DAO.SqlFilter)">
            <summary>
            Returns a filtered list of MailMessage rows.
            </summary>
            <param name="filter">Filtering criteria.</param>
            <returns>List of MailMessage objects.</returns>
            <exception cref="T:Spring2.Core.DAO.FinderException">Thrown when no rows are found matching the where criteria.</exception>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.MailMessageDAO.GetList(Spring2.Core.DAO.IOrderBy)">
            <summary>
            Returns an ordered list of MailMessage rows.  All rows in the database are returned
            </summary>
            <param name="orderByClause">Ordering criteria.</param>
            <returns>List of MailMessage objects.</returns>
            <exception cref="T:Spring2.Core.DAO.FinderException">Thrown when no rows are found.</exception>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.MailMessageDAO.GetList(Spring2.Core.DAO.SqlFilter,Spring2.Core.DAO.IOrderBy)">
            <summary>
            Returns an ordered and filtered list of MailMessage rows.
            </summary>
            <param name="filter">Filtering criteria.</param>
            <param name="orderByClause">Ordering criteria.</param>
            <returns>List of MailMessage objects.</returns>
            <exception cref="T:Spring2.Core.DAO.FinderException">Thrown when no rows are found matching the where criteria.</exception>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.MailMessageDAO.GetList(System.Int32)">
            <summary>
            Returns a list of all MailMessage rows.
            </summary>
            <param name="maxRows">Uses TOP to limit results to specified number of rows</param>
            <returns>List of MailMessage objects.</returns>
            <exception cref="T:Spring2.Core.DAO.FinderException">Thrown when no rows are found.</exception>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.MailMessageDAO.GetList(Spring2.Core.DAO.SqlFilter,System.Int32)">
            <summary>
            Returns a filtered list of MailMessage rows.
            </summary>
            <param name="filter">Filtering criteria.</param>
            <param name="maxRows">Uses TOP to limit results to specified number of rows</param>
            <returns>List of MailMessage objects.</returns>
            <exception cref="T:Spring2.Core.DAO.FinderException">Thrown when no rows are found matching the where criteria.</exception>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.MailMessageDAO.GetList(Spring2.Core.DAO.IOrderBy,System.Int32)">
            <summary>
            Returns an ordered list of MailMessage rows.  All rows in the database are returned
            </summary>
            <param name="orderByClause">Ordering criteria.</param>
            <param name="maxRows">Uses TOP to limit results to specified number of rows</param>
            <returns>List of MailMessage objects.</returns>
            <exception cref="T:Spring2.Core.DAO.FinderException">Thrown when no rows are found.</exception>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.MailMessageDAO.GetList(Spring2.Core.DAO.SqlFilter,Spring2.Core.DAO.IOrderBy,System.Int32)">
            <summary>
            Returns an ordered and filtered list of MailMessage rows.
            </summary>
            <param name="filter">Filtering criteria.</param>
            <param name="orderByClause">Ordering criteria.</param>
            <param name="maxRows">Uses TOP to limit results to specified number of rows</param>
            <returns>List of MailMessage objects.</returns>
            <exception cref="T:Spring2.Core.DAO.FinderException">Thrown when no rows are found matching the where criteria.</exception>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.MailMessageDAO.Load(Spring2.Core.Types.IdType)">
            <summary>
            Finds a MailMessage entity using it's primary key.
            </summary>
            <param name="mailMessageId">A key field.</param>
            <returns>A MailMessage object.</returns>
            <exception cref="T:Spring2.Core.DAO.FinderException">Thrown when no entity exists witht he specified primary key..</exception>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.MailMessageDAO.Reload(Spring2.Core.Mail.BusinessLogic.MailMessage)">
            <summary>
            Repopulates an existing business entity instance
            </summary>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.MailMessageDAO.GetList(System.Data.IDataReader)">
            <summary>
            Read through the reader and return a data object list
            </summary>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.MailMessageDAO.GetDataObject(System.Data.IDataReader)">
            <summary>
            Read from reader and return a single data object
            </summary>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.MailMessageDAO.GetDataObject(System.Data.IDataReader,Spring2.Core.Mail.Dao.MailMessageDAO.ColumnOrdinals)">
            <summary>
            Read from reader and return a single data object
            </summary>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.MailMessageDAO.GetDataObjectFromReader(Spring2.Core.Mail.BusinessLogic.MailMessage,System.Data.IDataReader)">
            <summary>
            Builds a data object from the current row in a data reader..
            </summary>
            <param name="data">Entity to be populated from data reader</param>
            <param name="dataReader">Container for database row.</param>
            <returns>Data object built from current row.</returns>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.MailMessageDAO.GetDataObjectFromReader(System.Data.IDataReader)">
            <summary>
            Builds a data object from the current row in a data reader..
            </summary>
            <param name="dataReader">Container for database row.</param>
            <returns>Data object built from current row.</returns>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.MailMessageDAO.GetDataObjectFromReader(System.Data.IDataReader,Spring2.Core.Mail.Dao.MailMessageDAO.ColumnOrdinals)">
            <summary>
            Builds a data object from the current row in a data reader..
            </summary>
            <param name="dataReader">Container for database row.</param>
            <param name="ordinals">An instance of ColumnOrdinals initialized for this data reader</param>
            <returns>Data object built from current row.</returns>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.MailMessageDAO.GetDataObjectFromReader(Spring2.Core.Mail.BusinessLogic.MailMessage,System.Data.IDataReader,Spring2.Core.Mail.Dao.MailMessageDAO.ColumnOrdinals)">
            <summary>
            Builds a data object from the current row in a data reader..
            </summary>
            <param name="data">Entity to be populated from data reader</param>
            <param name="dataReader">Container for database row.</param>
            <param name="ordinals">An instance of ColumnOrdinals initialized for this data reader</param>
            <returns>Data object built from current row.</returns>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.MailMessageDAO.Insert(Spring2.Core.Mail.BusinessLogic.MailMessage)">
            <summary>
            Inserts a record into the MailMessage table.
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.MailMessageDAO.Insert(Spring2.Core.Mail.BusinessLogic.MailMessage,System.Data.IDbTransaction)">
            <summary>
            Inserts a record into the MailMessage table.
            </summary>
            <param name="data"></param>
            <param name="transaction"></param>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.MailMessageDAO.Update(Spring2.Core.Mail.BusinessLogic.MailMessage)">
            <summary>
            Updates a record in the MailMessage table.
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.MailMessageDAO.Update(Spring2.Core.Mail.BusinessLogic.MailMessage,System.Data.IDbTransaction)">
            <summary>
            Updates a record in the MailMessage table.
            </summary>
            <param name="data"></param>
            <param name="transaction"></param>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.MailMessageDAO.Delete(Spring2.Core.Types.IdType)">
            <summary>
            Deletes a record from the MailMessage table by MailMessageId.
            </summary>
            <param name="mailMessageId">A key field.</param>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.MailMessageDAO.Delete(Spring2.Core.Types.IdType,System.Data.IDbTransaction)">
            <summary>
            Deletes a record from the MailMessage table by MailMessageId.
            </summary>
            <param name="mailMessageId">A key field.</param>
            <param name="transaction"></param>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.MailMessageDAO.FindByStatus(Spring2.Core.Mail.Types.MailMessageStatusEnum)">
            <summary>
            Returns a list of objects which match the values for the fields specified.
            </summary>
            <param name="mailMessageStatus">A field value to be matched.</param>
            <returns>The list of MailMessageDAO objects found.</returns>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.MailMessageDAO.FindByUniqueKey(Spring2.Core.Types.StringType)">
            <summary>
            Returns an object which matches the values for the fields specified.
            </summary>
            <param name="uniqueKey">A field value to be matched.</param>
            <returns>The object found.</returns>
            <exception cref="T:Spring2.Core.DAO.FinderException">Thrown when no rows are found.</exception>
        </member>
        <member name="T:Spring2.Core.Mail.Dao.MailMessageRouteDAO">
            <summary>
            Data access class for MailMessageRoute business entity.
            </summary>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.MailMessageRouteDAO.#cctor">
            <summary>
            Initializes the static map of property names to sql expressions.
            </summary>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.MailMessageRouteDAO.GetList">
            <summary>
            Returns a list of all MailMessageRoute rows.
            </summary>
            <returns>List of MailMessageRoute objects.</returns>
            <exception cref="T:Spring2.Core.DAO.FinderException">Thrown when no rows are found.</exception>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.MailMessageRouteDAO.GetList(Spring2.Core.DAO.SqlFilter)">
            <summary>
            Returns a filtered list of MailMessageRoute rows.
            </summary>
            <param name="filter">Filtering criteria.</param>
            <returns>List of MailMessageRoute objects.</returns>
            <exception cref="T:Spring2.Core.DAO.FinderException">Thrown when no rows are found matching the where criteria.</exception>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.MailMessageRouteDAO.GetList(Spring2.Core.DAO.IOrderBy)">
            <summary>
            Returns an ordered list of MailMessageRoute rows.  All rows in the database are returned
            </summary>
            <param name="orderByClause">Ordering criteria.</param>
            <returns>List of MailMessageRoute objects.</returns>
            <exception cref="T:Spring2.Core.DAO.FinderException">Thrown when no rows are found.</exception>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.MailMessageRouteDAO.GetList(Spring2.Core.DAO.SqlFilter,Spring2.Core.DAO.IOrderBy)">
            <summary>
            Returns an ordered and filtered list of MailMessageRoute rows.
            </summary>
            <param name="filter">Filtering criteria.</param>
            <param name="orderByClause">Ordering criteria.</param>
            <returns>List of MailMessageRoute objects.</returns>
            <exception cref="T:Spring2.Core.DAO.FinderException">Thrown when no rows are found matching the where criteria.</exception>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.MailMessageRouteDAO.GetList(System.Int32)">
            <summary>
            Returns a list of all MailMessageRoute rows.
            </summary>
            <param name="maxRows">Uses TOP to limit results to specified number of rows</param>
            <returns>List of MailMessageRoute objects.</returns>
            <exception cref="T:Spring2.Core.DAO.FinderException">Thrown when no rows are found.</exception>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.MailMessageRouteDAO.GetList(Spring2.Core.DAO.SqlFilter,System.Int32)">
            <summary>
            Returns a filtered list of MailMessageRoute rows.
            </summary>
            <param name="filter">Filtering criteria.</param>
            <param name="maxRows">Uses TOP to limit results to specified number of rows</param>
            <returns>List of MailMessageRoute objects.</returns>
            <exception cref="T:Spring2.Core.DAO.FinderException">Thrown when no rows are found matching the where criteria.</exception>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.MailMessageRouteDAO.GetList(Spring2.Core.DAO.IOrderBy,System.Int32)">
            <summary>
            Returns an ordered list of MailMessageRoute rows.  All rows in the database are returned
            </summary>
            <param name="orderByClause">Ordering criteria.</param>
            <param name="maxRows">Uses TOP to limit results to specified number of rows</param>
            <returns>List of MailMessageRoute objects.</returns>
            <exception cref="T:Spring2.Core.DAO.FinderException">Thrown when no rows are found.</exception>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.MailMessageRouteDAO.GetList(Spring2.Core.DAO.SqlFilter,Spring2.Core.DAO.IOrderBy,System.Int32)">
            <summary>
            Returns an ordered and filtered list of MailMessageRoute rows.
            </summary>
            <param name="filter">Filtering criteria.</param>
            <param name="orderByClause">Ordering criteria.</param>
            <param name="maxRows">Uses TOP to limit results to specified number of rows</param>
            <returns>List of MailMessageRoute objects.</returns>
            <exception cref="T:Spring2.Core.DAO.FinderException">Thrown when no rows are found matching the where criteria.</exception>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.MailMessageRouteDAO.Load(Spring2.Core.Types.IdType)">
            <summary>
            Finds a MailMessageRoute entity using it's primary key.
            </summary>
            <param name="mailMessageRouteId">A key field.</param>
            <returns>A MailMessageRoute object.</returns>
            <exception cref="T:Spring2.Core.DAO.FinderException">Thrown when no entity exists witht he specified primary key..</exception>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.MailMessageRouteDAO.Reload(Spring2.Core.Mail.BusinessLogic.MailMessageRoute)">
            <summary>
            Repopulates an existing business entity instance
            </summary>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.MailMessageRouteDAO.GetList(System.Data.IDataReader)">
            <summary>
            Read through the reader and return a data object list
            </summary>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.MailMessageRouteDAO.GetDataObject(System.Data.IDataReader)">
            <summary>
            Read from reader and return a single data object
            </summary>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.MailMessageRouteDAO.GetDataObject(System.Data.IDataReader,Spring2.Core.Mail.Dao.MailMessageRouteDAO.ColumnOrdinals)">
            <summary>
            Read from reader and return a single data object
            </summary>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.MailMessageRouteDAO.GetDataObjectFromReader(Spring2.Core.Mail.BusinessLogic.MailMessageRoute,System.Data.IDataReader)">
            <summary>
            Builds a data object from the current row in a data reader..
            </summary>
            <param name="data">Entity to be populated from data reader</param>
            <param name="dataReader">Container for database row.</param>
            <returns>Data object built from current row.</returns>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.MailMessageRouteDAO.GetDataObjectFromReader(System.Data.IDataReader)">
            <summary>
            Builds a data object from the current row in a data reader..
            </summary>
            <param name="dataReader">Container for database row.</param>
            <returns>Data object built from current row.</returns>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.MailMessageRouteDAO.GetDataObjectFromReader(System.Data.IDataReader,Spring2.Core.Mail.Dao.MailMessageRouteDAO.ColumnOrdinals)">
            <summary>
            Builds a data object from the current row in a data reader..
            </summary>
            <param name="dataReader">Container for database row.</param>
            <param name="ordinals">An instance of ColumnOrdinals initialized for this data reader</param>
            <returns>Data object built from current row.</returns>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.MailMessageRouteDAO.GetDataObjectFromReader(Spring2.Core.Mail.BusinessLogic.MailMessageRoute,System.Data.IDataReader,Spring2.Core.Mail.Dao.MailMessageRouteDAO.ColumnOrdinals)">
            <summary>
            Builds a data object from the current row in a data reader..
            </summary>
            <param name="data">Entity to be populated from data reader</param>
            <param name="dataReader">Container for database row.</param>
            <param name="ordinals">An instance of ColumnOrdinals initialized for this data reader</param>
            <returns>Data object built from current row.</returns>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.MailMessageRouteDAO.Insert(Spring2.Core.Mail.BusinessLogic.MailMessageRoute)">
            <summary>
            Inserts a record into the MailMessageRoute table.
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.MailMessageRouteDAO.Insert(Spring2.Core.Mail.BusinessLogic.MailMessageRoute,System.Data.IDbTransaction)">
            <summary>
            Inserts a record into the MailMessageRoute table.
            </summary>
            <param name="data"></param>
            <param name="transaction"></param>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.MailMessageRouteDAO.Update(Spring2.Core.Mail.BusinessLogic.MailMessageRoute)">
            <summary>
            Updates a record in the MailMessageRoute table.
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.MailMessageRouteDAO.Update(Spring2.Core.Mail.BusinessLogic.MailMessageRoute,System.Data.IDbTransaction)">
            <summary>
            Updates a record in the MailMessageRoute table.
            </summary>
            <param name="data"></param>
            <param name="transaction"></param>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.MailMessageRouteDAO.Delete(Spring2.Core.Types.IdType)">
            <summary>
            Deletes a record from the MailMessageRoute table by MailMessageRouteId.
            </summary>
            <param name="mailMessageRouteId">A key field.</param>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.MailMessageRouteDAO.Delete(Spring2.Core.Types.IdType,System.Data.IDbTransaction)">
            <summary>
            Deletes a record from the MailMessageRoute table by MailMessageRouteId.
            </summary>
            <param name="mailMessageRouteId">A key field.</param>
            <param name="transaction"></param>
        </member>
        <member name="M:Spring2.Core.Mail.Dao.MailMessageRouteDAO.FindByMailMessage(Spring2.Core.Types.StringType)">
            <summary>
            Returns a list of objects which match the values for the fields specified.
            </summary>
            <param name="mailMessage">A field value to be matched.</param>
            <returns>The list of MailMessageRouteDAO objects found.</returns>
        </member>
        <member name="T:Spring2.Core.Mail.DataObject.MailAttachmentList">
            <summary>
            IMailAttachment generic collection
            </summary>
        </member>
        <member name="M:Spring2.Core.Mail.DataObject.MailAttachmentList.Contains(Spring2.Core.Types.IdType)">
            <summary>
            See if the list contains an instance by identity
            </summary>
        </member>
        <member name="P:Spring2.Core.Mail.DataObject.MailAttachmentList.Item(Spring2.Core.Types.IdType)">
            <summary>
            returns the instance by identity or null if it not found
            </summary>
        </member>
        <member name="M:Spring2.Core.Mail.DataObject.MailAttachmentList.RetainAll(Spring2.Core.Mail.DataObject.MailAttachmentList)">
            <summary>
            Returns a new list that contains all of the elements that are in both lists
            </summary>
        </member>
        <member name="M:Spring2.Core.Mail.DataObject.MailAttachmentList.RemoveAll(Spring2.Core.Mail.DataObject.MailAttachmentList)">
            <summary>
            return a new list that contains only the elements not contained in the argument list
            </summary>
        </member>
        <member name="M:Spring2.Core.Mail.DataObject.MailAttachmentList.Remove(Spring2.Core.Types.IdType)">
            <summary>
            removes value by identity
            </summary>
        </member>
        <member name="M:Spring2.Core.Mail.DataObject.MailAttachmentList.Sort(System.Collections.IComparer)">
            <summary>
            Sort a list by a column
            </summary>
        </member>
        <member name="M:Spring2.Core.Mail.DataObject.MailAttachmentList.Sort(System.String)">
            <summary>
            Sort the list given the name of a comparer class.
            </summary>
        </member>
        <member name="T:Spring2.Core.Mail.DataObject.MailMessageList">
            <summary>
            IMailMessage generic collection
            </summary>
        </member>
        <member name="M:Spring2.Core.Mail.DataObject.MailMessageList.Contains(Spring2.Core.Types.IdType)">
            <summary>
            See if the list contains an instance by identity
            </summary>
        </member>
        <member name="P:Spring2.Core.Mail.DataObject.MailMessageList.Item(Spring2.Core.Types.IdType)">
            <summary>
            returns the instance by identity or null if it not found
            </summary>
        </member>
        <member name="M:Spring2.Core.Mail.DataObject.MailMessageList.RetainAll(Spring2.Core.Mail.DataObject.MailMessageList)">
            <summary>
            Returns a new list that contains all of the elements that are in both lists
            </summary>
        </member>
        <member name="M:Spring2.Core.Mail.DataObject.MailMessageList.RemoveAll(Spring2.Core.Mail.DataObject.MailMessageList)">
            <summary>
            return a new list that contains only the elements not contained in the argument list
            </summary>
        </member>
        <member name="M:Spring2.Core.Mail.DataObject.MailMessageList.Remove(Spring2.Core.Types.IdType)">
            <summary>
            removes value by identity
            </summary>
        </member>
        <member name="M:Spring2.Core.Mail.DataObject.MailMessageList.Sort(System.Collections.IComparer)">
            <summary>
            Sort a list by a column
            </summary>
        </member>
        <member name="M:Spring2.Core.Mail.DataObject.MailMessageList.Sort(System.String)">
            <summary>
            Sort the list given the name of a comparer class.
            </summary>
        </member>
        <member name="T:Spring2.Core.Mail.DataObject.MailMessageRouteList">
            <summary>
            IMailMessageRoute generic collection
            </summary>
        </member>
        <member name="M:Spring2.Core.Mail.DataObject.MailMessageRouteList.Contains(Spring2.Core.Types.IdType)">
            <summary>
            See if the list contains an instance by identity
            </summary>
        </member>
        <member name="P:Spring2.Core.Mail.DataObject.MailMessageRouteList.Item(Spring2.Core.Types.IdType)">
            <summary>
            returns the instance by identity or null if it not found
            </summary>
        </member>
        <member name="M:Spring2.Core.Mail.DataObject.MailMessageRouteList.RetainAll(Spring2.Core.Mail.DataObject.MailMessageRouteList)">
            <summary>
            Returns a new list that contains all of the elements that are in both lists
            </summary>
        </member>
        <member name="M:Spring2.Core.Mail.DataObject.MailMessageRouteList.RemoveAll(Spring2.Core.Mail.DataObject.MailMessageRouteList)">
            <summary>
            return a new list that contains only the elements not contained in the argument list
            </summary>
        </member>
        <member name="M:Spring2.Core.Mail.DataObject.MailMessageRouteList.Remove(Spring2.Core.Types.IdType)">
            <summary>
            removes value by identity
            </summary>
        </member>
        <member name="M:Spring2.Core.Mail.DataObject.MailMessageRouteList.Sort(System.Collections.IComparer)">
            <summary>
            Sort a list by a column
            </summary>
        </member>
        <member name="M:Spring2.Core.Mail.DataObject.MailMessageRouteList.Sort(System.String)">
            <summary>
            Sort the list given the name of a comparer class.
            </summary>
        </member>
        <member name="T:Spring2.Core.Mail.Types.ActiveStatusEnumList">
            <summary>
            ActiveStatusEnum generic collection
            </summary>
        </member>
        <member name="T:Spring2.Core.Mail.Types.MailBodyFormatEnumList">
            <summary>
            MailBodyFormatEnum generic collection
            </summary>
        </member>
        <member name="T:Spring2.Core.Mail.Types.MailMessageStatusEnumList">
            <summary>
            MailMessageStatusEnum generic collection
            </summary>
        </member>
        <member name="T:Spring2.Core.Mail.Types.MailPriorityEnumList">
            <summary>
            MailPriorityEnum generic collection
            </summary>
        </member>
        <member name="T:Spring2.Core.Mail.Types.RoutingTypeEnumList">
            <summary>
            RoutingTypeEnum generic collection
            </summary>
        </member>
    </members>
</doc>
