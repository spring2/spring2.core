<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Spring2.Core.Geocode</name>
    </assembly>
    <members>
        <member name="T:Spring2.Core.Geocode.Dao.AddressCacheDAO">
            <summary>
            Data access class for AddressCache business entity.
            </summary>
        </member>
        <member name="M:Spring2.Core.Geocode.Dao.AddressCacheDAO.SetInstance(Spring2.Core.Geocode.Dao.IAddressCacheDAO)">
            <summary>
            Sets the singleton DAO instance of IAddressCacheDAO
            </summary>
        </member>
        <member name="M:Spring2.Core.Geocode.Dao.AddressCacheDAO.#cctor">
            <summary>
            Initializes the static map of property names to sql expressions.
            </summary>
        </member>
        <member name="M:Spring2.Core.Geocode.Dao.AddressCacheDAO.GetList">
            <summary>
            Returns a list of all AddressCache rows.
            </summary>
            <returns>List of AddressCache objects.</returns>
            <exception cref="T:Spring2.Core.DAO.FinderException">Thrown when no rows are found.</exception>
        </member>
        <member name="M:Spring2.Core.Geocode.Dao.AddressCacheDAO.GetList(Spring2.Core.DAO.SqlFilter)">
            <summary>
            Returns a filtered list of AddressCache rows.
            </summary>
            <param name="filter">Filtering criteria.</param>
            <returns>List of AddressCache objects.</returns>
            <exception cref="T:Spring2.Core.DAO.FinderException">Thrown when no rows are found matching the where criteria.</exception>
        </member>
        <member name="M:Spring2.Core.Geocode.Dao.AddressCacheDAO.GetList(Spring2.Core.DAO.IOrderBy)">
            <summary>
            Returns an ordered list of AddressCache rows.  All rows in the database are returned
            </summary>
            <param name="orderByClause">Ordering criteria.</param>
            <returns>List of AddressCache objects.</returns>
            <exception cref="T:Spring2.Core.DAO.FinderException">Thrown when no rows are found.</exception>
        </member>
        <member name="M:Spring2.Core.Geocode.Dao.AddressCacheDAO.GetList(Spring2.Core.DAO.SqlFilter,Spring2.Core.DAO.IOrderBy)">
            <summary>
            Returns an ordered and filtered list of AddressCache rows.
            </summary>
            <param name="filter">Filtering criteria.</param>
            <param name="orderByClause">Ordering criteria.</param>
            <returns>List of AddressCache objects.</returns>
            <exception cref="T:Spring2.Core.DAO.FinderException">Thrown when no rows are found matching the where criteria.</exception>
        </member>
        <member name="M:Spring2.Core.Geocode.Dao.AddressCacheDAO.GetList(System.Int32)">
            <summary>
            Returns a list of all AddressCache rows.
            </summary>
            <param name="maxRows">Uses TOP to limit results to specified number of rows</param>
            <returns>List of AddressCache objects.</returns>
            <exception cref="T:Spring2.Core.DAO.FinderException">Thrown when no rows are found.</exception>
        </member>
        <member name="M:Spring2.Core.Geocode.Dao.AddressCacheDAO.GetList(Spring2.Core.DAO.SqlFilter,System.Int32)">
            <summary>
            Returns a filtered list of AddressCache rows.
            </summary>
            <param name="filter">Filtering criteria.</param>
            <param name="maxRows">Uses TOP to limit results to specified number of rows</param>
            <returns>List of AddressCache objects.</returns>
            <exception cref="T:Spring2.Core.DAO.FinderException">Thrown when no rows are found matching the where criteria.</exception>
        </member>
        <member name="M:Spring2.Core.Geocode.Dao.AddressCacheDAO.GetList(Spring2.Core.DAO.IOrderBy,System.Int32)">
            <summary>
            Returns an ordered list of AddressCache rows.  All rows in the database are returned
            </summary>
            <param name="orderByClause">Ordering criteria.</param>
            <param name="maxRows">Uses TOP to limit results to specified number of rows</param>
            <returns>List of AddressCache objects.</returns>
            <exception cref="T:Spring2.Core.DAO.FinderException">Thrown when no rows are found.</exception>
        </member>
        <member name="M:Spring2.Core.Geocode.Dao.AddressCacheDAO.GetList(Spring2.Core.DAO.SqlFilter,Spring2.Core.DAO.IOrderBy,System.Int32)">
            <summary>
            Returns an ordered and filtered list of AddressCache rows.
            </summary>
            <param name="filter">Filtering criteria.</param>
            <param name="orderByClause">Ordering criteria.</param>
            <param name="maxRows">Uses TOP to limit results to specified number of rows</param>
            <returns>List of AddressCache objects.</returns>
            <exception cref="T:Spring2.Core.DAO.FinderException">Thrown when no rows are found matching the where criteria.</exception>
        </member>
        <member name="M:Spring2.Core.Geocode.Dao.AddressCacheDAO.Load(Spring2.Core.Types.IdType)">
            <summary>
            Finds a AddressCache entity using it's primary key.
            </summary>
            <param name="addressId">A key field.</param>
            <returns>A AddressCache object.</returns>
            <exception cref="T:Spring2.Core.DAO.FinderException">Thrown when no entity exists witht he specified primary key..</exception>
        </member>
        <member name="M:Spring2.Core.Geocode.Dao.AddressCacheDAO.Reload(Spring2.Core.Geocode.BusinessLogic.AddressCache)">
            <summary>
            Repopulates an existing business entity instance
            </summary>
        </member>
        <member name="M:Spring2.Core.Geocode.Dao.AddressCacheDAO.GetList(System.Data.IDataReader)">
            <summary>
            Read through the reader and return a data object list
            </summary>
        </member>
        <member name="M:Spring2.Core.Geocode.Dao.AddressCacheDAO.GetDataObject(System.Data.IDataReader)">
            <summary>
            Read from reader and return a single data object
            </summary>
        </member>
        <member name="M:Spring2.Core.Geocode.Dao.AddressCacheDAO.GetDataObject(System.Data.IDataReader,Spring2.Core.Geocode.Dao.AddressCacheDAO.ColumnOrdinals)">
            <summary>
            Read from reader and return a single data object
            </summary>
        </member>
        <member name="M:Spring2.Core.Geocode.Dao.AddressCacheDAO.GetDataObjectFromReader(Spring2.Core.Geocode.BusinessLogic.AddressCache,System.Data.IDataReader)">
            <summary>
            Builds a data object from the current row in a data reader..
            </summary>
            <param name="data">Entity to be populated from data reader</param>
            <param name="dataReader">Container for database row.</param>
            <returns>Data object built from current row.</returns>
        </member>
        <member name="M:Spring2.Core.Geocode.Dao.AddressCacheDAO.GetDataObjectFromReader(System.Data.IDataReader)">
            <summary>
            Builds a data object from the current row in a data reader..
            </summary>
            <param name="dataReader">Container for database row.</param>
            <returns>Data object built from current row.</returns>
        </member>
        <member name="M:Spring2.Core.Geocode.Dao.AddressCacheDAO.GetDataObjectFromReader(System.Data.IDataReader,Spring2.Core.Geocode.Dao.AddressCacheDAO.ColumnOrdinals)">
            <summary>
            Builds a data object from the current row in a data reader..
            </summary>
            <param name="dataReader">Container for database row.</param>
            <param name="ordinals">An instance of ColumnOrdinals initialized for this data reader</param>
            <returns>Data object built from current row.</returns>
        </member>
        <member name="M:Spring2.Core.Geocode.Dao.AddressCacheDAO.GetDataObjectFromReader(Spring2.Core.Geocode.BusinessLogic.AddressCache,System.Data.IDataReader,Spring2.Core.Geocode.Dao.AddressCacheDAO.ColumnOrdinals)">
            <summary>
            Builds a data object from the current row in a data reader..
            </summary>
            <param name="data">Entity to be populated from data reader</param>
            <param name="dataReader">Container for database row.</param>
            <param name="ordinals">An instance of ColumnOrdinals initialized for this data reader</param>
            <returns>Data object built from current row.</returns>
        </member>
        <member name="M:Spring2.Core.Geocode.Dao.AddressCacheDAO.Insert(Spring2.Core.Geocode.BusinessLogic.AddressCache)">
            <summary>
            Inserts a record into the AddressCache table.
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:Spring2.Core.Geocode.Dao.AddressCacheDAO.Insert(Spring2.Core.Geocode.BusinessLogic.AddressCache,System.Data.IDbTransaction)">
            <summary>
            Inserts a record into the AddressCache table.
            </summary>
            <param name="data"></param>
            <param name="transaction"></param>
        </member>
        <member name="M:Spring2.Core.Geocode.Dao.AddressCacheDAO.Update(Spring2.Core.Geocode.BusinessLogic.AddressCache)">
            <summary>
            Updates a record in the AddressCache table.
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:Spring2.Core.Geocode.Dao.AddressCacheDAO.Update(Spring2.Core.Geocode.BusinessLogic.AddressCache,System.Data.IDbTransaction)">
            <summary>
            Updates a record in the AddressCache table.
            </summary>
            <param name="data"></param>
            <param name="transaction"></param>
        </member>
        <member name="M:Spring2.Core.Geocode.Dao.AddressCacheDAO.Delete(Spring2.Core.Types.IdType)">
            <summary>
            Deletes a record from the AddressCache table by AddressId.
            </summary>
            <param name="addressId">A key field.</param>
        </member>
        <member name="M:Spring2.Core.Geocode.Dao.AddressCacheDAO.Delete(Spring2.Core.Types.IdType,System.Data.IDbTransaction)">
            <summary>
            Deletes a record from the AddressCache table by AddressId.
            </summary>
            <param name="addressId">A key field.</param>
            <param name="transaction"></param>
        </member>
        <member name="M:Spring2.Core.Geocode.Dao.AddressCacheDAO.FindAddressByStreetAndPostalCode(Spring2.Core.Types.StringType,Spring2.Core.Types.StringType)">
            <summary>
            Returns a list of objects which match the values for the fields specified.
            </summary>
            <param name="address1">A field value to be matched.</param>
            <param name="postalCode">A field value to be matched.</param>
            <returns>The list of AddressCacheDAO objects found.</returns>
        </member>
        <member name="M:Spring2.Core.Geocode.Dao.AddressCacheDAO.FindAddressByStreetAndCityAndState(Spring2.Core.Types.StringType,Spring2.Core.Types.StringType,Spring2.Core.Types.StringType)">
            <summary>
            Returns a list of objects which match the values for the fields specified.
            </summary>
            <param name="address1">A field value to be matched.</param>
            <param name="city">A field value to be matched.</param>
            <param name="region">A field value to be matched.</param>
            <returns>The list of AddressCacheDAO objects found.</returns>
        </member>
        <member name="T:Spring2.Core.Geocode.Dao.IAddressCacheDAO">
            <summary>
            Data access interface for AddressCache business entity.
            </summary>
        </member>
        <member name="M:Spring2.Core.Geocode.Dao.IAddressCacheDAO.SetInstance(Spring2.Core.Geocode.Dao.IAddressCacheDAO)">
            <summary>
            Sets the singleton DAO instance of IAddressCacheDAO
            </summary>
        </member>
        <member name="M:Spring2.Core.Geocode.Dao.IAddressCacheDAO.GetList">
            <summary>
            Returns a list of all AddressCache rows.
            </summary>
            <returns>List of AddressCache objects.</returns>
            <exception cref="T:Spring2.Core.DAO.FinderException">Thrown when no rows are found.</exception>
        </member>
        <member name="M:Spring2.Core.Geocode.Dao.IAddressCacheDAO.GetList(Spring2.Core.DAO.SqlFilter)">
            <summary>
            Returns a filtered list of AddressCache rows.
            </summary>
            <param name="filter">Filtering criteria.</param>
            <returns>List of AddressCache objects.</returns>
            <exception cref="T:Spring2.Core.DAO.FinderException">Thrown when no rows are found matching the where criteria.</exception>
        </member>
        <member name="M:Spring2.Core.Geocode.Dao.IAddressCacheDAO.GetList(Spring2.Core.DAO.IOrderBy)">
            <summary>
            Returns an ordered list of AddressCache rows.  All rows in the database are returned
            </summary>
            <param name="orderByClause">Ordering criteria.</param>
            <returns>List of AddressCache objects.</returns>
            <exception cref="T:Spring2.Core.DAO.FinderException">Thrown when no rows are found.</exception>
        </member>
        <member name="M:Spring2.Core.Geocode.Dao.IAddressCacheDAO.GetList(Spring2.Core.DAO.SqlFilter,Spring2.Core.DAO.IOrderBy)">
            <summary>
            Returns an ordered and filtered list of AddressCache rows.
            </summary>
            <param name="filter">Filtering criteria.</param>
            <param name="orderByClause">Ordering criteria.</param>
            <returns>List of AddressCache objects.</returns>
            <exception cref="T:Spring2.Core.DAO.FinderException">Thrown when no rows are found matching the where criteria.</exception>
        </member>
        <member name="M:Spring2.Core.Geocode.Dao.IAddressCacheDAO.GetList(System.Int32)">
            <summary>
            Returns a list of all AddressCache rows.
            </summary>
            <param name="maxRows">Uses TOP to limit results to specified number of rows</param>
            <returns>List of AddressCache objects.</returns>
            <exception cref="T:Spring2.Core.DAO.FinderException">Thrown when no rows are found.</exception>
        </member>
        <member name="M:Spring2.Core.Geocode.Dao.IAddressCacheDAO.GetList(Spring2.Core.DAO.SqlFilter,System.Int32)">
            <summary>
            Returns a filtered list of AddressCache rows.
            </summary>
            <param name="filter">Filtering criteria.</param>
            <param name="maxRows">Uses TOP to limit results to specified number of rows</param>
            <returns>List of AddressCache objects.</returns>
            <exception cref="T:Spring2.Core.DAO.FinderException">Thrown when no rows are found matching the where criteria.</exception>
        </member>
        <member name="M:Spring2.Core.Geocode.Dao.IAddressCacheDAO.GetList(Spring2.Core.DAO.IOrderBy,System.Int32)">
            <summary>
            Returns an ordered list of AddressCache rows.  All rows in the database are returned
            </summary>
            <param name="orderByClause">Ordering criteria.</param>
            <param name="maxRows">Uses TOP to limit results to specified number of rows</param>
            <returns>List of AddressCache objects.</returns>
            <exception cref="T:Spring2.Core.DAO.FinderException">Thrown when no rows are found.</exception>
        </member>
        <member name="M:Spring2.Core.Geocode.Dao.IAddressCacheDAO.GetList(Spring2.Core.DAO.SqlFilter,Spring2.Core.DAO.IOrderBy,System.Int32)">
            <summary>
            Returns an ordered and filtered list of AddressCache rows.
            </summary>
            <param name="filter">Filtering criteria.</param>
            <param name="orderByClause">Ordering criteria.</param>
            <param name="maxRows">Uses TOP to limit results to specified number of rows</param>
            <returns>List of AddressCache objects.</returns>
            <exception cref="T:Spring2.Core.DAO.FinderException">Thrown when no rows are found matching the where criteria.</exception>
        </member>
        <member name="M:Spring2.Core.Geocode.Dao.IAddressCacheDAO.Load(Spring2.Core.Types.IdType)">
            <summary>
            Finds a AddressCache entity using it's primary key.
            </summary>
            <param name="addressId">A key field.</param>
            <returns>A AddressCache object.</returns>
            <exception cref="T:Spring2.Core.DAO.FinderException">Thrown when no entity exists witht he specified primary key..</exception>
        </member>
        <member name="M:Spring2.Core.Geocode.Dao.IAddressCacheDAO.Reload(Spring2.Core.Geocode.BusinessLogic.AddressCache)">
            <summary>
            Repopulates an existing business entity instance
            </summary>
        </member>
        <member name="M:Spring2.Core.Geocode.Dao.IAddressCacheDAO.GetDataObjectFromReader(Spring2.Core.Geocode.BusinessLogic.AddressCache,System.Data.IDataReader)">
            <summary>
            Builds a data object from the current row in a data reader..
            </summary>
            <param name="data">Entity to be populated from data reader</param>
            <param name="dataReader">Container for database row.</param>
            <returns>Data object built from current row.</returns>
        </member>
        <member name="M:Spring2.Core.Geocode.Dao.IAddressCacheDAO.GetDataObjectFromReader(System.Data.IDataReader)">
            <summary>
            Builds a data object from the current row in a data reader..
            </summary>
            <param name="dataReader">Container for database row.</param>
            <returns>Data object built from current row.</returns>
        </member>
        <member name="M:Spring2.Core.Geocode.Dao.IAddressCacheDAO.GetDataObjectFromReader(System.Data.IDataReader,Spring2.Core.Geocode.Dao.AddressCacheDAO.ColumnOrdinals)">
            <summary>
            Builds a data object from the current row in a data reader..
            </summary>
            <param name="dataReader">Container for database row.</param>
            <param name="ordinals">An instance of ColumnOrdinals initialized for this data reader</param>
            <returns>Data object built from current row.</returns>
        </member>
        <member name="M:Spring2.Core.Geocode.Dao.IAddressCacheDAO.GetDataObjectFromReader(Spring2.Core.Geocode.BusinessLogic.AddressCache,System.Data.IDataReader,Spring2.Core.Geocode.Dao.AddressCacheDAO.ColumnOrdinals)">
            <summary>
            Builds a data object from the current row in a data reader..
            </summary>
            <param name="data">Entity to be populated from data reader</param>
            <param name="dataReader">Container for database row.</param>
            <param name="ordinals">An instance of ColumnOrdinals initialized for this data reader</param>
            <returns>Data object built from current row.</returns>
        </member>
        <member name="M:Spring2.Core.Geocode.Dao.IAddressCacheDAO.Insert(Spring2.Core.Geocode.BusinessLogic.AddressCache)">
            <summary>
            Inserts a record into the AddressCache table.
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:Spring2.Core.Geocode.Dao.IAddressCacheDAO.Update(Spring2.Core.Geocode.BusinessLogic.AddressCache)">
            <summary>
            Updates a record in the AddressCache table.
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:Spring2.Core.Geocode.Dao.IAddressCacheDAO.Delete(Spring2.Core.Types.IdType)">
            <summary>
            Deletes a record from the AddressCache table by AddressId.
            </summary>
            <param name="addressId">A key field.</param>
        </member>
        <member name="M:Spring2.Core.Geocode.Dao.IAddressCacheDAO.FindAddressByStreetAndPostalCode(Spring2.Core.Types.StringType,Spring2.Core.Types.StringType)">
            <summary>
            Returns a list of objects which match the values for the fields specified.
            </summary>
            <param name="address1">A field value to be matched.</param>
            <param name="postalCode">A field value to be matched.</param>
            <returns>The list of AddressCacheDAO objects found.</returns>
        </member>
        <member name="M:Spring2.Core.Geocode.Dao.IAddressCacheDAO.FindAddressByStreetAndCityAndState(Spring2.Core.Types.StringType,Spring2.Core.Types.StringType,Spring2.Core.Types.StringType)">
            <summary>
            Returns a list of objects which match the values for the fields specified.
            </summary>
            <param name="address1">A field value to be matched.</param>
            <param name="city">A field value to be matched.</param>
            <param name="region">A field value to be matched.</param>
            <returns>The list of AddressCacheDAO objects found.</returns>
        </member>
        <member name="T:Spring2.Core.Geocode.DataObject.AddressCacheList">
            <summary>
            IAddressCache generic collection
            </summary>
        </member>
        <member name="M:Spring2.Core.Geocode.DataObject.AddressCacheList.Contains(Spring2.Core.Types.IdType)">
            <summary>
            See if the list contains an instance by identity
            </summary>
        </member>
        <member name="P:Spring2.Core.Geocode.DataObject.AddressCacheList.Item(Spring2.Core.Types.IdType)">
            <summary>
            returns the instance by identity or null if it not found
            </summary>
        </member>
        <member name="M:Spring2.Core.Geocode.DataObject.AddressCacheList.RetainAll(Spring2.Core.Geocode.DataObject.AddressCacheList)">
            <summary>
            Returns a new list that contains all of the elements that are in both lists
            </summary>
        </member>
        <member name="M:Spring2.Core.Geocode.DataObject.AddressCacheList.RemoveAll(Spring2.Core.Geocode.DataObject.AddressCacheList)">
            <summary>
            return a new list that contains only the elements not contained in the argument list
            </summary>
        </member>
        <member name="M:Spring2.Core.Geocode.DataObject.AddressCacheList.Remove(Spring2.Core.Types.IdType)">
            <summary>
            removes value by identity
            </summary>
        </member>
        <member name="M:Spring2.Core.Geocode.DataObject.AddressCacheList.Sort(System.Collections.IComparer)">
            <summary>
            Sort a list by a column
            </summary>
        </member>
        <member name="M:Spring2.Core.Geocode.DataObject.AddressCacheList.Sort(System.String)">
            <summary>
            Sort the list given the name of a comparer class.
            </summary>
        </member>
        <member name="T:Spring2.Core.Geocode.GecodeTestProvider">
            <summary>
            Summary description for GecodeTestProvider.
            </summary>
        </member>
        <member name="T:Spring2.Core.Geocode.GeocodeData">
            <summary>
            Summary description for GecodeData.
            </summary>
        </member>
        <member name="T:Spring2.Core.Geocode.GeocodeException">
            <summary>
            Summary description for GeocodeException.
            </summary>
        </member>
        <member name="T:Spring2.Core.Geocode.GeocodeProvider">
            <summary>
            Summary description for GeocodeProvider.
            </summary>
        </member>
        <member name="T:Spring2.Core.Geocode.GeocodeV3">
            <summary>
            Summary description for TeleAtlasProvider.
            </summary>
        </member>
        <member name="T:Spring2.Core.Geocode.IGeocodeProvider">
            <summary>
            Summary description for IGeocodeProvider.
            </summary>
        </member>
        <member name="T:Spring2.Core.Geocode.GeocodeWrapper">
            <summary>
            Summary description for GecodeWrapper.
            </summary>
        </member>
        <member name="P:Spring2.Core.Geocode.GeocodeWrapper.exeDirectory">
            <summary>
            name of the home directory (where keyrings AND gpg.exe are located)
            </summary>
        </member>
        <member name="M:Spring2.Core.Geocode.GeocodeWrapper.ExecuteCommand">
            <summary>
            </summary>
        </member>
        <member name="M:Spring2.Core.Geocode.GeocodeWrapper.StandardOutputReader">
             <summary>
             Reader thread for standard output
            
             <p/>Updates the private variable _outputString (locks it first)
             </summary>
        </member>
        <member name="M:Spring2.Core.Geocode.GeocodeWrapper.StandardErrorReader">
             <summary>
             Reader thread for standard error
            
             <p/>Updates the private variable _errorString (locks it first)
             </summary>
        </member>
        <member name="T:Spring2.Core.Geocode.TeleAtlasGeocodeData">
            <summary>
            Summary description for GeocodeData.
            </summary>
        </member>
        <member name="T:Spring2.Core.Geocode.TeleAtlasProvider">
            <summary>
            Summary description for TeleAtlasProvider.
            </summary>
        </member>
        <member name="T:Spring2.Core.Geocode.TomTom.TomTomProvider">
            <summary>
            Summary description for TeleAtlasProvider.
            </summary>
        </member>
        <member name="T:Spring2.Core.Geocode.Types.GeocodeStatusEnumList">
            <summary>
            GeocodeStatusEnum generic collection
            </summary>
        </member>
        <member name="T:Spring2.Core.Geocode.WebService.GeocodeWebServiceWrapper">
            <summary>
            Summary description for GecodeWebServiceWrapper.
            </summary>
        </member>
        <member name="P:Spring2.Core.Geocode.WebService.GeocodeWebServiceWrapper.Credential">
            <summary>
            Creates the credential it uses to authenticate against the Tele Atlas Servers
            </summary>
        </member>
        <member name="M:Spring2.Core.Geocode.WebService.GeocodeWebServiceWrapper.ExecuteWebServiceCommand">
            <summary>
            Calls the Tele Atlas web service function to validate the address
            </summary>
            <returns>TeleAtlasGeocodeData</returns>
        </member>
        <member name="M:Spring2.Core.Geocode.WebService.GeocodeWebServiceWrapper.MakeGeocodeParamString">
            <summary>
            Creates the input string passed to Tele Atlas for verification
            </summary>
            <returns>com.teleatlas.na.ezlocate.geocoding.NameValue[]</returns>
        </member>
        <member name="M:Spring2.Core.Geocode.WebService.GeocodeWebServiceWrapper.NewNamedPair(System.String,System.String)">
            <summary>
            creates the name value pair used as input to the Tele Atlas web service
            	/// </summary>
            <param name="name"></param>
            <param name="data"></param>
            <returns>com.teleatlas.na.ezlocate.geocoding.NameValue</returns>
        </member>
        <member name="T:Spring2.Core.Geocode.WebService.ITeleAtlasAuthenticator">
            <summary>
            Summary description for ITeleAtlasAuthenticator.
            </summary>
        </member>
        <member name="T:Spring2.Core.Geocode.WebService.TeleAtlasAuthenticator">
            <summary>
            Summary description for TeleAtlasAuthenticator.
            </summary>
        </member>
        <member name="M:Spring2.Core.Geocode.WebService.TeleAtlasAuthenticator.Authenticate(System.String,System.String,System.String)">
            <summary>
            authenticates the user against the Tele Atlas server
            </summary>
            <param name="userName"></param>
            <param name="password"></param>
            <param name="host"></param>
            <returns>int</returns>
        </member>
        <member name="M:Spring2.Core.Geocode.WebService.TeleAtlasAuthenticator.GetCredential">
            <summary>
            uses a cached credential unless the timeout window has expired
            new credentials are valid for 8 minutes
            this function expires them after 5 minutes thus giving any caller
            a guaranteed safety window during which the credential can be used.
            </summary>
            <returns>int</returns>
        </member>
        <member name="M:Spring2.Core.Geocode.WebService.TeleAtlasAuthenticator.CreateCredential(System.Int32)">
            <summary>
            authenticates with the server and returns the created credential value
            </summary>
            <param name="duration"></param>
            <returns>int</returns>
        </member>
        <member name="T:Spring2.Core.Geocode.WebService.TeleAtlasGeocodeWebServiceData">
            <summary>
            Summary description for TeleAtlasGeocodeWebServiceData.
            </summary>
        </member>
        <member name="M:Spring2.Core.Geocode.WebService.TeleAtlasGeocodeWebServiceData.ParseOutput">
            <summary>
            Parses the hash and extracts the data
            </summary>
        </member>
        <member name="M:Spring2.Core.Geocode.WebService.TeleAtlasGeocodeWebServiceData.CreateDBOutput">
            <summary>
            converts the name/value result object returned by the webservice to a string format that is saved
            to the database in the Result column of AddressCache
            </summary>
        </member>
        <member name="M:Spring2.Core.Geocode.WebService.TeleAtlasGeocodeWebServiceData.DoConversion">
            <summary>
            Converts the legacy Result string returned by the Tele Atlas application to a new format
            </summary>
        </member>
        <member name="T:Spring2.Core.Geocode.WebService.TeleAtlasWebServiceProvider">
            <summary>
            Summary description for TeleAtlasWebServiceProvider.
            </summary>
        </member>
        <member name="T:Spring2.Core.com.teleatlas.na.ezlocate.authentication.Authentication">
            <remarks/>
        </member>
        <member name="M:Spring2.Core.com.teleatlas.na.ezlocate.authentication.Authentication.#ctor">
            <remarks/>
        </member>
        <member name="E:Spring2.Core.com.teleatlas.na.ezlocate.authentication.Authentication.requestChallengeCompleted">
            <remarks/>
        </member>
        <member name="E:Spring2.Core.com.teleatlas.na.ezlocate.authentication.Authentication.answerChallengeCompleted">
            <remarks/>
        </member>
        <member name="E:Spring2.Core.com.teleatlas.na.ezlocate.authentication.Authentication.invalidateCredentialCompleted">
            <remarks/>
        </member>
        <member name="E:Spring2.Core.com.teleatlas.na.ezlocate.authentication.Authentication.testCredentialCompleted">
            <remarks/>
        </member>
        <member name="M:Spring2.Core.com.teleatlas.na.ezlocate.authentication.Authentication.requestChallenge(System.String,System.Int32,System.Int32@)">
            <remarks/>
        </member>
        <member name="M:Spring2.Core.com.teleatlas.na.ezlocate.authentication.Authentication.BeginrequestChallenge(System.String,System.Int32,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:Spring2.Core.com.teleatlas.na.ezlocate.authentication.Authentication.EndrequestChallenge(System.IAsyncResult,System.Int32@)">
            <remarks/>
        </member>
        <member name="M:Spring2.Core.com.teleatlas.na.ezlocate.authentication.Authentication.requestChallengeAsync(System.String,System.Int32)">
            <remarks/>
        </member>
        <member name="M:Spring2.Core.com.teleatlas.na.ezlocate.authentication.Authentication.requestChallengeAsync(System.String,System.Int32,System.Object)">
            <remarks/>
        </member>
        <member name="M:Spring2.Core.com.teleatlas.na.ezlocate.authentication.Authentication.answerChallenge(System.Int32,System.Int32,System.Int32@)">
            <remarks/>
        </member>
        <member name="M:Spring2.Core.com.teleatlas.na.ezlocate.authentication.Authentication.BeginanswerChallenge(System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:Spring2.Core.com.teleatlas.na.ezlocate.authentication.Authentication.EndanswerChallenge(System.IAsyncResult,System.Int32@)">
            <remarks/>
        </member>
        <member name="M:Spring2.Core.com.teleatlas.na.ezlocate.authentication.Authentication.answerChallengeAsync(System.Int32,System.Int32)">
            <remarks/>
        </member>
        <member name="M:Spring2.Core.com.teleatlas.na.ezlocate.authentication.Authentication.answerChallengeAsync(System.Int32,System.Int32,System.Object)">
            <remarks/>
        </member>
        <member name="M:Spring2.Core.com.teleatlas.na.ezlocate.authentication.Authentication.invalidateCredential(System.Int32)">
            <remarks/>
        </member>
        <member name="M:Spring2.Core.com.teleatlas.na.ezlocate.authentication.Authentication.BegininvalidateCredential(System.Int32,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:Spring2.Core.com.teleatlas.na.ezlocate.authentication.Authentication.EndinvalidateCredential(System.IAsyncResult)">
            <remarks/>
        </member>
        <member name="M:Spring2.Core.com.teleatlas.na.ezlocate.authentication.Authentication.invalidateCredentialAsync(System.Int32)">
            <remarks/>
        </member>
        <member name="M:Spring2.Core.com.teleatlas.na.ezlocate.authentication.Authentication.invalidateCredentialAsync(System.Int32,System.Object)">
            <remarks/>
        </member>
        <member name="M:Spring2.Core.com.teleatlas.na.ezlocate.authentication.Authentication.testCredential(System.String,System.Int32,System.Int32,System.String@,System.String@,System.Int64@)">
            <remarks/>
        </member>
        <member name="M:Spring2.Core.com.teleatlas.na.ezlocate.authentication.Authentication.BegintestCredential(System.String,System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:Spring2.Core.com.teleatlas.na.ezlocate.authentication.Authentication.EndtestCredential(System.IAsyncResult,System.String@,System.String@,System.Int64@)">
            <remarks/>
        </member>
        <member name="M:Spring2.Core.com.teleatlas.na.ezlocate.authentication.Authentication.testCredentialAsync(System.String,System.Int32,System.Int32)">
            <remarks/>
        </member>
        <member name="M:Spring2.Core.com.teleatlas.na.ezlocate.authentication.Authentication.testCredentialAsync(System.String,System.Int32,System.Int32,System.Object)">
            <remarks/>
        </member>
        <member name="M:Spring2.Core.com.teleatlas.na.ezlocate.authentication.Authentication.CancelAsync(System.Object)">
            <remarks/>
        </member>
        <member name="T:Spring2.Core.com.teleatlas.na.ezlocate.authentication.requestChallengeCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Spring2.Core.com.teleatlas.na.ezlocate.authentication.requestChallengeCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Spring2.Core.com.teleatlas.na.ezlocate.authentication.requestChallengeCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:Spring2.Core.com.teleatlas.na.ezlocate.authentication.requestChallengeCompletedEventArgs.encryptedID">
            <remarks/>
        </member>
        <member name="T:Spring2.Core.com.teleatlas.na.ezlocate.authentication.answerChallengeCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Spring2.Core.com.teleatlas.na.ezlocate.authentication.answerChallengeCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Spring2.Core.com.teleatlas.na.ezlocate.authentication.answerChallengeCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:Spring2.Core.com.teleatlas.na.ezlocate.authentication.answerChallengeCompletedEventArgs.credential">
            <remarks/>
        </member>
        <member name="T:Spring2.Core.com.teleatlas.na.ezlocate.authentication.invalidateCredentialCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Spring2.Core.com.teleatlas.na.ezlocate.authentication.invalidateCredentialCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Spring2.Core.com.teleatlas.na.ezlocate.authentication.invalidateCredentialCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Spring2.Core.com.teleatlas.na.ezlocate.authentication.testCredentialCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Spring2.Core.com.teleatlas.na.ezlocate.authentication.testCredentialCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Spring2.Core.com.teleatlas.na.ezlocate.authentication.testCredentialCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:Spring2.Core.com.teleatlas.na.ezlocate.authentication.testCredentialCompletedEventArgs.user">
            <remarks/>
        </member>
        <member name="P:Spring2.Core.com.teleatlas.na.ezlocate.authentication.testCredentialCompletedEventArgs.password">
            <remarks/>
        </member>
        <member name="P:Spring2.Core.com.teleatlas.na.ezlocate.authentication.testCredentialCompletedEventArgs.expiration">
            <remarks/>
        </member>
        <member name="T:Spring2.Core.com.teleatlas.na.ezlocate.geocoding.Geocoding">
            <remarks/>
        </member>
        <member name="M:Spring2.Core.com.teleatlas.na.ezlocate.geocoding.Geocoding.#ctor">
            <remarks/>
        </member>
        <member name="E:Spring2.Core.com.teleatlas.na.ezlocate.geocoding.Geocoding.getServicesCompleted">
            <remarks/>
        </member>
        <member name="E:Spring2.Core.com.teleatlas.na.ezlocate.geocoding.Geocoding.getServiceDescriptionCompleted">
            <remarks/>
        </member>
        <member name="E:Spring2.Core.com.teleatlas.na.ezlocate.geocoding.Geocoding.findAddressCompleted">
            <remarks/>
        </member>
        <member name="E:Spring2.Core.com.teleatlas.na.ezlocate.geocoding.Geocoding.findMultiAddressCompleted">
            <remarks/>
        </member>
        <member name="M:Spring2.Core.com.teleatlas.na.ezlocate.geocoding.Geocoding.getServices(System.Int32,Spring2.Core.com.teleatlas.na.ezlocate.geocoding.NameValue[]@)">
            <remarks/>
        </member>
        <member name="M:Spring2.Core.com.teleatlas.na.ezlocate.geocoding.Geocoding.BegingetServices(System.Int32,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:Spring2.Core.com.teleatlas.na.ezlocate.geocoding.Geocoding.EndgetServices(System.IAsyncResult,Spring2.Core.com.teleatlas.na.ezlocate.geocoding.NameValue[]@)">
            <remarks/>
        </member>
        <member name="M:Spring2.Core.com.teleatlas.na.ezlocate.geocoding.Geocoding.getServicesAsync(System.Int32)">
            <remarks/>
        </member>
        <member name="M:Spring2.Core.com.teleatlas.na.ezlocate.geocoding.Geocoding.getServicesAsync(System.Int32,System.Object)">
            <remarks/>
        </member>
        <member name="M:Spring2.Core.com.teleatlas.na.ezlocate.geocoding.Geocoding.getServiceDescription(System.String,System.Int32,System.String@,System.String@,Spring2.Core.com.teleatlas.na.ezlocate.geocoding.NameValue[]@,Spring2.Core.com.teleatlas.na.ezlocate.geocoding.OutputField[]@,Spring2.Core.com.teleatlas.na.ezlocate.geocoding.MatchType[]@,System.String@)">
            <remarks/>
        </member>
        <member name="M:Spring2.Core.com.teleatlas.na.ezlocate.geocoding.Geocoding.BegingetServiceDescription(System.String,System.Int32,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:Spring2.Core.com.teleatlas.na.ezlocate.geocoding.Geocoding.EndgetServiceDescription(System.IAsyncResult,System.String@,System.String@,Spring2.Core.com.teleatlas.na.ezlocate.geocoding.NameValue[]@,Spring2.Core.com.teleatlas.na.ezlocate.geocoding.OutputField[]@,Spring2.Core.com.teleatlas.na.ezlocate.geocoding.MatchType[]@,System.String@)">
            <remarks/>
        </member>
        <member name="M:Spring2.Core.com.teleatlas.na.ezlocate.geocoding.Geocoding.getServiceDescriptionAsync(System.String,System.Int32)">
            <remarks/>
        </member>
        <member name="M:Spring2.Core.com.teleatlas.na.ezlocate.geocoding.Geocoding.getServiceDescriptionAsync(System.String,System.Int32,System.Object)">
            <remarks/>
        </member>
        <member name="M:Spring2.Core.com.teleatlas.na.ezlocate.geocoding.Geocoding.findAddress(System.String,Spring2.Core.com.teleatlas.na.ezlocate.geocoding.NameValue[],System.Int32,Spring2.Core.com.teleatlas.na.ezlocate.geocoding.Geocode@)">
            <remarks/>
        </member>
        <member name="M:Spring2.Core.com.teleatlas.na.ezlocate.geocoding.Geocoding.BeginfindAddress(System.String,Spring2.Core.com.teleatlas.na.ezlocate.geocoding.NameValue[],System.Int32,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:Spring2.Core.com.teleatlas.na.ezlocate.geocoding.Geocoding.EndfindAddress(System.IAsyncResult,Spring2.Core.com.teleatlas.na.ezlocate.geocoding.Geocode@)">
            <remarks/>
        </member>
        <member name="M:Spring2.Core.com.teleatlas.na.ezlocate.geocoding.Geocoding.findAddressAsync(System.String,Spring2.Core.com.teleatlas.na.ezlocate.geocoding.NameValue[],System.Int32)">
            <remarks/>
        </member>
        <member name="M:Spring2.Core.com.teleatlas.na.ezlocate.geocoding.Geocoding.findAddressAsync(System.String,Spring2.Core.com.teleatlas.na.ezlocate.geocoding.NameValue[],System.Int32,System.Object)">
            <remarks/>
        </member>
        <member name="M:Spring2.Core.com.teleatlas.na.ezlocate.geocoding.Geocoding.findMultiAddress(System.String,Spring2.Core.com.teleatlas.na.ezlocate.geocoding.NameValue[][],System.Int32,Spring2.Core.com.teleatlas.na.ezlocate.geocoding.Geocode[]@)">
            <remarks/>
        </member>
        <member name="M:Spring2.Core.com.teleatlas.na.ezlocate.geocoding.Geocoding.BeginfindMultiAddress(System.String,Spring2.Core.com.teleatlas.na.ezlocate.geocoding.NameValue[][],System.Int32,System.AsyncCallback,System.Object)">
            <remarks/>
        </member>
        <member name="M:Spring2.Core.com.teleatlas.na.ezlocate.geocoding.Geocoding.EndfindMultiAddress(System.IAsyncResult,Spring2.Core.com.teleatlas.na.ezlocate.geocoding.Geocode[]@)">
            <remarks/>
        </member>
        <member name="M:Spring2.Core.com.teleatlas.na.ezlocate.geocoding.Geocoding.findMultiAddressAsync(System.String,Spring2.Core.com.teleatlas.na.ezlocate.geocoding.NameValue[][],System.Int32)">
            <remarks/>
        </member>
        <member name="M:Spring2.Core.com.teleatlas.na.ezlocate.geocoding.Geocoding.findMultiAddressAsync(System.String,Spring2.Core.com.teleatlas.na.ezlocate.geocoding.NameValue[][],System.Int32,System.Object)">
            <remarks/>
        </member>
        <member name="M:Spring2.Core.com.teleatlas.na.ezlocate.geocoding.Geocoding.CancelAsync(System.Object)">
            <remarks/>
        </member>
        <member name="T:Spring2.Core.com.teleatlas.na.ezlocate.geocoding.NameValue">
            <remarks/>
        </member>
        <member name="P:Spring2.Core.com.teleatlas.na.ezlocate.geocoding.NameValue.name">
            <remarks/>
        </member>
        <member name="P:Spring2.Core.com.teleatlas.na.ezlocate.geocoding.NameValue.value">
            <remarks/>
        </member>
        <member name="T:Spring2.Core.com.teleatlas.na.ezlocate.geocoding.Geocode">
            <remarks/>
        </member>
        <member name="P:Spring2.Core.com.teleatlas.na.ezlocate.geocoding.Geocode.resultCode">
            <remarks/>
        </member>
        <member name="P:Spring2.Core.com.teleatlas.na.ezlocate.geocoding.Geocode.mAttributes">
            <remarks/>
        </member>
        <member name="T:Spring2.Core.com.teleatlas.na.ezlocate.geocoding.MatchType">
            <remarks/>
        </member>
        <member name="P:Spring2.Core.com.teleatlas.na.ezlocate.geocoding.MatchType.name">
            <remarks/>
        </member>
        <member name="P:Spring2.Core.com.teleatlas.na.ezlocate.geocoding.MatchType.description">
            <remarks/>
        </member>
        <member name="P:Spring2.Core.com.teleatlas.na.ezlocate.geocoding.MatchType.id">
            <remarks/>
        </member>
        <member name="T:Spring2.Core.com.teleatlas.na.ezlocate.geocoding.OutputField">
            <remarks/>
        </member>
        <member name="P:Spring2.Core.com.teleatlas.na.ezlocate.geocoding.OutputField.name">
            <remarks/>
        </member>
        <member name="P:Spring2.Core.com.teleatlas.na.ezlocate.geocoding.OutputField.description">
            <remarks/>
        </member>
        <member name="P:Spring2.Core.com.teleatlas.na.ezlocate.geocoding.OutputField.type">
            <remarks/>
        </member>
        <member name="T:Spring2.Core.com.teleatlas.na.ezlocate.geocoding.getServicesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Spring2.Core.com.teleatlas.na.ezlocate.geocoding.getServicesCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Spring2.Core.com.teleatlas.na.ezlocate.geocoding.getServicesCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:Spring2.Core.com.teleatlas.na.ezlocate.geocoding.getServicesCompletedEventArgs.services">
            <remarks/>
        </member>
        <member name="T:Spring2.Core.com.teleatlas.na.ezlocate.geocoding.getServiceDescriptionCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Spring2.Core.com.teleatlas.na.ezlocate.geocoding.getServiceDescriptionCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Spring2.Core.com.teleatlas.na.ezlocate.geocoding.getServiceDescriptionCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:Spring2.Core.com.teleatlas.na.ezlocate.geocoding.getServiceDescriptionCompletedEventArgs.description">
            <remarks/>
        </member>
        <member name="P:Spring2.Core.com.teleatlas.na.ezlocate.geocoding.getServiceDescriptionCompletedEventArgs.countryCode">
            <remarks/>
        </member>
        <member name="P:Spring2.Core.com.teleatlas.na.ezlocate.geocoding.getServiceDescriptionCompletedEventArgs.inputs">
            <remarks/>
        </member>
        <member name="P:Spring2.Core.com.teleatlas.na.ezlocate.geocoding.getServiceDescriptionCompletedEventArgs.outputs">
            <remarks/>
        </member>
        <member name="P:Spring2.Core.com.teleatlas.na.ezlocate.geocoding.getServiceDescriptionCompletedEventArgs.matchTypes">
            <remarks/>
        </member>
        <member name="P:Spring2.Core.com.teleatlas.na.ezlocate.geocoding.getServiceDescriptionCompletedEventArgs.matchTypeName">
            <remarks/>
        </member>
        <member name="T:Spring2.Core.com.teleatlas.na.ezlocate.geocoding.findAddressCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Spring2.Core.com.teleatlas.na.ezlocate.geocoding.findAddressCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Spring2.Core.com.teleatlas.na.ezlocate.geocoding.findAddressCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:Spring2.Core.com.teleatlas.na.ezlocate.geocoding.findAddressCompletedEventArgs.result">
            <remarks/>
        </member>
        <member name="T:Spring2.Core.com.teleatlas.na.ezlocate.geocoding.findMultiAddressCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Spring2.Core.com.teleatlas.na.ezlocate.geocoding.findMultiAddressCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Spring2.Core.com.teleatlas.na.ezlocate.geocoding.findMultiAddressCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:Spring2.Core.com.teleatlas.na.ezlocate.geocoding.findMultiAddressCompletedEventArgs.results">
            <remarks/>
        </member>
        <member name="P:Google.Api.Maps.Service.Geocoding.AddressComponent.LongName">
            <summary>
            The full text description or name of the address component as
            returned by the Geocoder.
            </summary>
        </member>
        <member name="P:Google.Api.Maps.Service.Geocoding.AddressComponent.ShortName">
            <summary>
            An abbreviated textual name for the address component, if available.
            For example, an address component for the state of Alaska may have
            a short_name of "AK" using the 2-letter postal abbreviation.
            </summary>
        </member>
        <member name="P:Google.Api.Maps.Service.Geocoding.AddressComponent.Types">
            <summary>
            Indicates the type of address component. This array contains a set
            of one or more tags.
            </summary>
        </member>
        <member name="F:Google.Api.Maps.Service.Geocoding.AddressType.StreetAddress">
            <summary>
            Indicates a precise street address.
            </summary>
        </member>
        <member name="F:Google.Api.Maps.Service.Geocoding.AddressType.Route">
            <summary>
            Indicates a named route (such as "US 101").
            </summary>
        </member>
        <member name="F:Google.Api.Maps.Service.Geocoding.AddressType.Intersection">
            <summary>
            Indicates a major intersection, usually of two major roads.
            </summary>
        </member>
        <member name="F:Google.Api.Maps.Service.Geocoding.AddressType.Political">
            <summary>
            Indicates a political entity. Usually, this type indicates a polygon of
            some civil administration.
            </summary>
        </member>
        <member name="F:Google.Api.Maps.Service.Geocoding.AddressType.Country">
            <summary>
            Indicates the national political entity, and is typically the highest
            order type returned by the Geocoder.
            </summary>
        </member>
        <member name="F:Google.Api.Maps.Service.Geocoding.AddressType.AdministrativeAreaLevel1">
            <summary>
            Indicates a first-order civil entity below the country level. Within the
            United States, these administrative levels are states. Not all nations
            exhibit these administrative levels.
            </summary>
        </member>
        <member name="F:Google.Api.Maps.Service.Geocoding.AddressType.AdministrativeAreaLevel2">
            <summary>
            Indicates a second-order civil entity below the country level. Within the
            United States, these administrative levels are counties. Not all nations
            exhibit these administrative levels.
            </summary>
        </member>
        <member name="F:Google.Api.Maps.Service.Geocoding.AddressType.AdministrativeAreaLevel3">
            <summary>
            Indicates a third-order civil entity below the country level. This type
            indicates a minor civil division. Not all nations exhibit these
            administrative levels.
            </summary>
        </member>
        <member name="F:Google.Api.Maps.Service.Geocoding.AddressType.ColloquialArea">
            <summary>
            Indicates a commonly-used alternative name for the entity.
            </summary>
        </member>
        <member name="F:Google.Api.Maps.Service.Geocoding.AddressType.Locality">
            <summary>
            Indicates an incorporated city or town political entity.
            </summary>
        </member>
        <member name="F:Google.Api.Maps.Service.Geocoding.AddressType.Sublocality">
            <summary>
            Indicates an first-order civil entity below a locality.
            </summary>
        </member>
        <member name="F:Google.Api.Maps.Service.Geocoding.AddressType.Neighborhood">
            <summary>
            Indicates a named neighborhood.
            </summary>
        </member>
        <member name="F:Google.Api.Maps.Service.Geocoding.AddressType.Premise">
            <summary>
            Indicates a named location, usually a building or collection of
            buildings with a common name.
            </summary>
        </member>
        <member name="F:Google.Api.Maps.Service.Geocoding.AddressType.Subpremise">
            <summary>
            Indicates a first-order entity below a named location, usually a
            singular building within a collection of buildings with a common
            name.
            </summary>
        </member>
        <member name="F:Google.Api.Maps.Service.Geocoding.AddressType.PostalCode">
            <summary>
            Indicates a postal code as used to address postal mail within the
            country.
            </summary>
        </member>
        <member name="F:Google.Api.Maps.Service.Geocoding.AddressType.NaturalFeature">
            <summary>
            Indicates a prominent natural feature.
            </summary>
        </member>
        <member name="F:Google.Api.Maps.Service.Geocoding.AddressType.Airport">
            <summary>
            Indicates an airport.
            </summary>
        </member>
        <member name="F:Google.Api.Maps.Service.Geocoding.AddressType.Park">
            <summary>
            Indicates a named park.
            </summary>
        </member>
        <member name="F:Google.Api.Maps.Service.Geocoding.AddressType.PointOfInterest">
            <summary>
            Indicates a named point of interest. Typically, these "POI"s are
            prominent local entities that don't easily fit in another category
            such as "Empire State Building" or "Statue of Liberty."
            </summary>
        </member>
        <member name="F:Google.Api.Maps.Service.Geocoding.AddressType.PostBox">
            <summary>
            Indicates a specific postal box.
            </summary>
        </member>
        <member name="F:Google.Api.Maps.Service.Geocoding.AddressType.StreetNumber">
            <summary>
            Indicates the precise street number.
            </summary>
        </member>
        <member name="F:Google.Api.Maps.Service.Geocoding.AddressType.Floor">
            <summary>
            Indicates the floor of a building address.
            </summary>
        </member>
        <member name="F:Google.Api.Maps.Service.Geocoding.AddressType.Room">
            <summary>
            Indicates the room of a building address.
            </summary>
        </member>
        <member name="T:Google.Api.Maps.Service.Geocoding.GeocodingRequest">
            <summary>
            Provides a request for the Google Maps Geocoding web service.
            </summary>
        </member>
        <member name="P:Google.Api.Maps.Service.Geocoding.GeocodingRequest.Address">
            <summary>
            The address that you want to geocode.
            </summary>
            <remarks>Required if latlng not present.</remarks>
        </member>
        <member name="P:Google.Api.Maps.Service.Geocoding.GeocodingRequest.LatitudeLongitude">
            <summary>
            The textual latitude/longitude value for which you wish to obtain
            the closest, human-readable address.
            </summary>
            <remarks>Required if address not present.</remarks>
            <see cref="!:http://code.google.com/apis/maps/documentation/geocoding/#ReverseGeocoding"/>
        </member>
        <member name="P:Google.Api.Maps.Service.Geocoding.GeocodingRequest.Bounds">
            <summary>
            The bounding box of the viewport within which to bias geocode
            results more prominently.
            </summary>
            <remarks>
            Optional. This parameter will only influence, not fully restrict, results
            from the geocoder.
            </remarks>
            <see cref="!:http://code.google.com/apis/maps/documentation/geocoding/#Viewports"/>
        </member>
        <member name="P:Google.Api.Maps.Service.Geocoding.GeocodingRequest.Region">
            <summary>
            The region code, specified as a ccTLD ("top-level domain")
            two-character value.
            </summary>
            <remarks>
            Optional. This parameter will only influence, not fully restrict, results
            from the geocoder.
            </remarks>
            <see cref="!:http://code.google.com/apis/maps/documentation/geocoding/#RegionCodes"/>
        </member>
        <member name="P:Google.Api.Maps.Service.Geocoding.GeocodingRequest.Language">
            <summary>
            The language in which to return results. If language is not
            supplied, the geocoder will attempt to use the native language of
            the domain from which the request is sent wherever possible.
            </summary>
            <remarks>Optional.</remarks>
            <see cref="!:http://code.google.com/apis/maps/faq.html#languagesupport"/>
        </member>
        <member name="P:Google.Api.Maps.Service.Geocoding.GeocodingRequest.Sensor">
            <summary>
            Indicates whether or not the geocoding request comes from a device
            with a location sensor. This value must be either true or false.
            </summary>
            <remarks>Required.</remarks>
        </member>
        <member name="P:Google.Api.Maps.Service.Geocoding.GeocodingResult.Types">
            <summary>
            Indicates the type of the returned result. This array contains a
            set of one or more tags identifying the type of feature returned
            in the result. For example, a geocode of "Chicago" returns
            "locality" which indicates that "Chicago" is a city, and also
            returns "political" which indicates it is a political entity.
            </summary>
        </member>
        <member name="P:Google.Api.Maps.Service.Geocoding.GeocodingResult.FormattedAddress">
            <summary>
            A string containing the human-readable address of this location.
            Often this address is equivalent to the "postal address," which
            sometimes differs from country to country. (Note that some
            countries, such as the United Kingdom, do not allow distribution
            of true postal addresses due to licensing restrictions.) This
            address is generally composed of one or more address components.
            </summary>
        </member>
        <member name="P:Google.Api.Maps.Service.Geocoding.GeocodingResult.Components">
            <summary>
            An array containing the separate address components.  For example,
            the address "111 8th Avenue, New York, NY" contains separate
            address components for "111" (the street number, "8th Avenue" (the
            route), "New York" (the city) and "NY" (the US state).
            </summary>
        </member>
        <member name="T:Google.Api.Maps.Service.Geocoding.GeocodingService">
            <summary>
            Provides a direct way to access a geocoder via an HTTP request.
            Additionally, the service allows you to perform the converse operation
            (turning coordinates into addresses); this process is known as
            "reverse geocoding."
            </summary>
        </member>
        <member name="M:Google.Api.Maps.Service.Geocoding.GeocodingService.GetResponse(Google.Api.Maps.Service.Geocoding.GeocodingRequest)">
            <summary>
            Sends the specified request to the Google Maps Geocoding web
            service and parses the response as an GeocodingResponse
            object.
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="P:Google.Api.Maps.Service.Geocoding.Geometry.Location">
            <summary>
            Contains the geocoded latitude,longitude value. For normal address
            lookups, this field is typically the most important.
            </summary>
        </member>
        <member name="P:Google.Api.Maps.Service.Geocoding.Geometry.LocationType">
            <summary>
            Stores additional data about the specified location.
            </summary>
        </member>
        <member name="P:Google.Api.Maps.Service.Geocoding.Geometry.Viewport">
            <summary>
            Contains the recommended viewport for displaying the returned
            result, specified as two latitude,longitude values defining the
            southwest and northeast corner of the viewport bounding box.
            Generally the viewport is used to frame a result when displaying
            it to a user.
            </summary>
        </member>
        <member name="F:Google.Api.Maps.Service.Geocoding.LocationType.Rooftop">
            <summary>
            Indicates that the returned result is a precise geocode for which we have
            location information accurate down to street address precision.
            </summary>
        </member>
        <member name="F:Google.Api.Maps.Service.Geocoding.LocationType.RangeInterpolated">
            <summary>
            Indicates that the returned result reflects an approximation (usually on
            a road) interpolated between two precise points (such as intersections).
            Interpolated results are generally returned when rooftop geocodes are
            unavailable for a street address.
            </summary>
        </member>
        <member name="F:Google.Api.Maps.Service.Geocoding.LocationType.GeometricCenter">
            <summary>
            Indicates that the returned result is the geometric center of a result
            such as a polyline (for example, a street) or polygon (region).
            </summary>
        </member>
        <member name="F:Google.Api.Maps.Service.Geocoding.LocationType.Approximate">
            <summary>
            Indicates that the returned result is approximate.
            </summary>
        </member>
        <member name="T:Google.Api.Maps.Service.Http">
            <summary>
            Provides an intuitive and simple HTTP client wrapper.
            </summary>
        </member>
        <member name="F:Google.Api.Maps.Service.ServiceResponseStatus.Ok">
            <summary>
            Indicates that no errors occurred; the address was successfully 
            parsed and at least one geocode was returned.
            </summary>
        </member>
        <member name="F:Google.Api.Maps.Service.ServiceResponseStatus.InvalidRequest">
            <summary>
            Indicating the service request was malformed.
            </summary>
        </member>
        <member name="F:Google.Api.Maps.Service.ServiceResponseStatus.ZeroResults">
            <summary>
            Indicates that the geocode was successful but returned no results.
            This may occur if the geocode was passed a non-existent address or
            a latlng in a remote location.
            </summary>
        </member>
        <member name="F:Google.Api.Maps.Service.ServiceResponseStatus.OverQueryLimit">
            <summary>
            Indicates that you are over your quota.
            </summary>
        </member>
        <member name="F:Google.Api.Maps.Service.ServiceResponseStatus.RequestDenied">
            <summary>
            Indicates that your request was denied, generally because of lack
            of a sensor parameter.
            </summary>
        </member>
    </members>
</doc>
