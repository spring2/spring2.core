<!--
conversion format replacement parameters:
			0=data object variable name
			1=Property name (properly cased)
			2=sqltype's readermethod (formatted by readermethodformat) (for convert from sql type, otherwise blank)
			3=reader variable name (for convert from sql type, otherwise blank)
			4=coluumn
			5=property name (property cased without data object name)
-->
<types>
	<!-- .Net primitive types -->
	<type name="Guid" newinstanceformat="new Guid()" />
	<type name="Byte" newinstanceformat="0" />
	<type name="Byte[]" newinstanceformat="null" />
	<type name="String" newinstanceformat="String.Empty" />
	<type name="DateTime" newinstanceformat="new DateTime()" />
	<type name="Int32" newinstanceformat="0" />
	<type name="Int64" newinstanceformat="0" />
	<type name="Boolean" newinstanceformat="false" />
	<type name="Double" newinstanceformat="0" />
	<type name="Single" newinstanceformat="0" />
	<type name="Decimal" newinstanceformat="0" />

	<!-- .Net FCL types -->
	<type name="IList" namespace="System.Collections" />
	<type name="ArrayList" namespace="System.Collections" newinstanceformat="new ArrayList()" />
	<type name="Hashtable" namespace="System.Collections" newinstanceformat="new Hashtable()" />

	<!-- Spring2.Core.Types -->
	<type name="BooleanType" namespace="Spring2.Core.Types" converttosqltypeformat="{1}.IsValid ? {1}.ToBoolean() as Object : DBNull.Value" convertfromsqltypeformat="BooleanType.GetInstance({2})" newinstanceformat="BooleanType.DEFAULT" nullinstanceformat="BooleanType.UNSET" convertforcompare="{0}.ToString().CompareTo({1}.ToString())" />
	<type name="StringType" namespace="Spring2.Core.Types" converttosqltypeformat="{1}.IsValid ? {1}.ToString() as Object : DBNull.Value" convertfromsqltypeformat="StringType.Parse({2})" newinstanceformat="StringType.DEFAULT" nullinstanceformat="StringType.UNSET" convertforcompare="{0}.ToString().CompareTo({1}.ToString())" />
	<type name="IdType" namespace="Spring2.Core.Types" converttosqltypeformat="{1}.IsValid ? {1}.ToInt32() as Object : DBNull.Value" convertfromsqltypeformat="new IdType({2})" newinstanceformat="IdType.DEFAULT" nullinstanceformat="IdType.UNSET" convertforcompare="{0}.CompareTo({1})" />
	<type name="DateType" namespace="Spring2.Core.Types" converttosqltypeformat="{1}.IsValid ? {1}.ToDate() as Object : DBNull.Value" convertfromsqltypeformat="new DateType({2})" newinstanceformat="DateType.DEFAULT" nullinstanceformat="DateType.UNSET" convertforcompare="{0}.ToDateTime().CompareTo({1}.ToDateTime())" />
	<type name="DateTimeType" namespace="Spring2.Core.Types" converttosqltypeformat="{1}.IsValid ? {1}.ToDateTime() as Object : DBNull.Value" convertfromsqltypeformat="new DateTimeType({2})" newinstanceformat="DateTimeType.DEFAULT" nullinstanceformat="DateTimeType.UNSET" convertforcompare="{0}.ToDateTime().CompareTo({1}.ToDateTime())" />
	<type name="DecimalType" namespace="Spring2.Core.Types" converttosqltypeformat="{1}.IsValid ? {1}.ToDecimal() as Object : DBNull.Value" convertfromsqltypeformat="new DecimalType({2})" newinstanceformat="DecimalType.DEFAULT" nullinstanceformat="DecimalType.UNSET" convertforcompare="{0}.CompareTo({1})" />
	<type name="CurrencyType" namespace="Spring2.Core.Types" converttosqltypeformat="{1}.IsValid ? {1}.ToDecimal() as Object : DBNull.Value" convertfromsqltypeformat="new CurrencyType({2})" newinstanceformat="CurrencyType.DEFAULT" nullinstanceformat="CurrencyType.UNSET" convertforcompare="{0}.CompareTo({1})" />
	<type name="IntegerType" namespace="Spring2.Core.Types" converttosqltypeformat="{1}.IsValid ? {1}.ToInt32() as Object : DBNull.Value" convertfromsqltypeformat="new IntegerType({2})" newinstanceformat="IntegerType.DEFAULT" nullinstanceformat="IntegerType.UNSET"  convertforcompare="{0}.CompareTo({1})" />
	<type name="GenderType" namespace="Spring2.Core.Types" converttosqltypeformat="{1}.IsValid ? {1}.Code as Object : DBNull.Value" convertfromsqltypeformat="GenderType.GetInstance({2})" newinstanceformat="GenderType.DEFAULT" nullinstanceformat="GenderType.UNSET"  convertforcompare="{0}.ToString().CompareTo({1}.ToString())"/>
	<type name="USStateCodeEnum" namespace="Spring2.Core.Types" converttosqltypeformat="{1}.IsValid ? {1}.Code as Object : DBNull.Value" convertfromsqltypeformat="USStateCodeEnum.GetInstance({2})" newinstanceformat="USStateCodeEnum.DEFAULT" nullinstanceformat="USStateCodeEnum.UNSET" convertforcompare="{0}.ToString().CompareTo({1})" />
	<type name="PhoneNumberType" namespace="Spring2.Core.Types" converttosqltypeformat="{1}.IsValid ? {1}.ToString() as Object : DBNull.Value" convertfromsqltypeformat="PhoneNumberType.Parse({2})" newinstanceformat="PhoneNumberType.DEFAULT" nullinstanceformat="PhoneNumberType.UNSET" convertforcompare="{0}.ToString().CompareTo({1}.ToString())" />
	<type name="StringTypeList" namespace="System.Collections" newinstanceformat="new StringTypeList()" />
	<type name="ILocale" namespace="Spring2.Core.Types" newinstanceformat="null" converttosqltypeformat="{1}.IsValid ? {1}.Code as Object : DBNull.Value" convertfromsqltypeformat="{0}.SetValue({2})" convertforcompare="{0}.ToString().CompareTo({1}.ToString())" />
	<type name="ILanguage" namespace="Spring2.Core.Types" newinstanceformat="null" converttosqltypeformat="{1}.IsValid ? {1}.Code as Object : DBNull.Value" convertfromsqltypeformat="{0}.SetValue({2})" convertforcompare="{0}.ToString().CompareTo({1}.ToString())" />
	
	<!-- TODO: need to be able to specify that the type implements IDataType -->
	<type name="Message" namespace="Spring2.Core.Message" newinstanceformat="null" nullinstanceformat="null" />
	<type name="MessageList" namespace="Spring2.Core.Message" newinstanceformat="new MessageList()" nullinstanceformat="null" />
</types>
