//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2407
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 1.1.4322.2407.
// 
namespace Spring2.Core.com.teleatlas.na.ezlocate.geocoding {
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="GeocodingSoapBinding", Namespace="http://ezlocate.na.teleatlas.com/Geocoding.wsdl")]
    public class Geocoding : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        /// <remarks/>
        public Geocoding() {
            this.Url = "http://mmezl.teleatlas.com/axis/services/Geocoding";
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://ezlocate.na.teleatlas.com/Geocoding.xsd1", ResponseNamespace="http://ezlocate.na.teleatlas.com/Geocoding.xsd1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("resultCode", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int getServices([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int identity, [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlArrayItemAttribute("nv", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out NameValue[] services) {
            object[] results = this.Invoke("getServices", new object[] {
                        identity});
            services = ((NameValue[])(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetServices(int identity, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getServices", new object[] {
                        identity}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndgetServices(System.IAsyncResult asyncResult, out NameValue[] services) {
            object[] results = this.EndInvoke(asyncResult);
            services = ((NameValue[])(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://ezlocate.na.teleatlas.com/Geocoding.xsd1", ResponseNamespace="http://ezlocate.na.teleatlas.com/Geocoding.xsd1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("resultCode", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int getServiceDescription([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string service, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int identity, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out string description, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out string countryCode, [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlArrayItemAttribute("nv", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out NameValue[] inputs, [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlArrayItemAttribute("fields", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out OutputField[] outputs, [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlArrayItemAttribute("types", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out MatchType[] matchTypes, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out string matchTypeName) {
            object[] results = this.Invoke("getServiceDescription", new object[] {
                        service,
                        identity});
            description = ((string)(results[1]));
            countryCode = ((string)(results[2]));
            inputs = ((NameValue[])(results[3]));
            outputs = ((OutputField[])(results[4]));
            matchTypes = ((MatchType[])(results[5]));
            matchTypeName = ((string)(results[6]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetServiceDescription(string service, int identity, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getServiceDescription", new object[] {
                        service,
                        identity}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndgetServiceDescription(System.IAsyncResult asyncResult, out string description, out string countryCode, out NameValue[] inputs, out OutputField[] outputs, out MatchType[] matchTypes, out string matchTypeName) {
            object[] results = this.EndInvoke(asyncResult);
            description = ((string)(results[1]));
            countryCode = ((string)(results[2]));
            inputs = ((NameValue[])(results[3]));
            outputs = ((OutputField[])(results[4]));
            matchTypes = ((MatchType[])(results[5]));
            matchTypeName = ((string)(results[6]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://ezlocate.na.teleatlas.com/Geocoding.xsd1", ResponseNamespace="http://ezlocate.na.teleatlas.com/Geocoding.xsd1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("resultCode", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int findAddress([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string service, [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlArrayItemAttribute("nv", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] NameValue[] input, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int identity, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out Geocode result) {
            object[] results = this.Invoke("findAddress", new object[] {
                        service,
                        input,
                        identity});
            result = ((Geocode)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginfindAddress(string service, NameValue[] input, int identity, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("findAddress", new object[] {
                        service,
                        input,
                        identity}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndfindAddress(System.IAsyncResult asyncResult, out Geocode result) {
            object[] results = this.EndInvoke(asyncResult);
            result = ((Geocode)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://ezlocate.na.teleatlas.com/Geocoding.xsd1", ResponseNamespace="http://ezlocate.na.teleatlas.com/Geocoding.xsd1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("resultCode", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int findMultiAddress([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string service, [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlArrayItemAttribute("record", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlArrayItemAttribute("nv", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, NestingLevel=1)] NameValue[][] inputs, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int identity, [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlArrayItemAttribute("sequence", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out Geocode[] results) {
            object[] results1 = this.Invoke("findMultiAddress", new object[] {
                        service,
                        inputs,
                        identity});
            results = ((Geocode[])(results1[1]));
            return ((int)(results1[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginfindMultiAddress(string service, NameValue[][] inputs, int identity, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("findMultiAddress", new object[] {
                        service,
                        inputs,
                        identity}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndfindMultiAddress(System.IAsyncResult asyncResult, out Geocode[] results) {
            object[] results1 = this.EndInvoke(asyncResult);
            results = ((Geocode[])(results1[1]));
            return ((int)(results1[0]));
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ezlocate.na.teleatlas.com/Geocoding.xsd1")]
    public class NameValue {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string name;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string value;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ezlocate.na.teleatlas.com/Geocoding.xsd1")]
    public class Geocode {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int resultCode;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("nv", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public NameValue[] mAttributes;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ezlocate.na.teleatlas.com/Geocoding.xsd1")]
    public class MatchType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string name;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string description;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int id;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ezlocate.na.teleatlas.com/Geocoding.xsd1")]
    public class OutputField {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string name;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string description;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int type;
    }
}
