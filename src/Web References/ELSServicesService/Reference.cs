//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18052
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18052.
// 
#pragma warning disable 1591

namespace Spring2.Core.ELSServicesService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ELSServices.cfcSoapBinding", Namespace="http://els")]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(QueryBean))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(CFCInvocationException))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(Map))]
    public partial class ELSServicesService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback MultiLocationCarrierPickupOperationCompleted;
        
        private System.Threading.SendOrPostCallback CarrierPickupChangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback CarrierPickupAvailabilityOperationCompleted;
        
        private System.Threading.SendOrPostCallback RefundRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback CarrierPickupCancelOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRetailAccountsOperationCompleted;
        
        private System.Threading.SendOrPostCallback StatusRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback UserSignupOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetResellerTransactionsListingOperationCompleted;
        
        private System.Threading.SendOrPostCallback SCANRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback CarrierPickupRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTransactionsListingOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ELSServicesService() {
            this.Url = global::Spring2.Core.Properties.Settings.Default.Spring2_Core_PostageService_ELSServicesService_ELSServicesService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event MultiLocationCarrierPickupCompletedEventHandler MultiLocationCarrierPickupCompleted;
        
        /// <remarks/>
        public event CarrierPickupChangeCompletedEventHandler CarrierPickupChangeCompleted;
        
        /// <remarks/>
        public event CarrierPickupAvailabilityCompletedEventHandler CarrierPickupAvailabilityCompleted;
        
        /// <remarks/>
        public event RefundRequestCompletedEventHandler RefundRequestCompleted;
        
        /// <remarks/>
        public event CarrierPickupCancelCompletedEventHandler CarrierPickupCancelCompleted;
        
        /// <remarks/>
        public event GetRetailAccountsCompletedEventHandler GetRetailAccountsCompleted;
        
        /// <remarks/>
        public event StatusRequestCompletedEventHandler StatusRequestCompleted;
        
        /// <remarks/>
        public event UserSignupCompletedEventHandler UserSignupCompleted;
        
        /// <remarks/>
        public event GetResellerTransactionsListingCompletedEventHandler GetResellerTransactionsListingCompleted;
        
        /// <remarks/>
        public event SCANRequestCompletedEventHandler SCANRequestCompleted;
        
        /// <remarks/>
        public event CarrierPickupRequestCompletedEventHandler CarrierPickupRequestCompleted;
        
        /// <remarks/>
        public event GetTransactionsListingCompletedEventHandler GetTransactionsListingCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://els", ResponseNamespace="http://els")]
        [return: System.Xml.Serialization.SoapElementAttribute("MultiLocationCarrierPickupReturn")]
        public object MultiLocationCarrierPickup(object XMLInput) {
            object[] results = this.Invoke("MultiLocationCarrierPickup", new object[] {
                        XMLInput});
            return ((object)(results[0]));
        }
        
        /// <remarks/>
        public void MultiLocationCarrierPickupAsync(object XMLInput) {
            this.MultiLocationCarrierPickupAsync(XMLInput, null);
        }
        
        /// <remarks/>
        public void MultiLocationCarrierPickupAsync(object XMLInput, object userState) {
            if ((this.MultiLocationCarrierPickupOperationCompleted == null)) {
                this.MultiLocationCarrierPickupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMultiLocationCarrierPickupOperationCompleted);
            }
            this.InvokeAsync("MultiLocationCarrierPickup", new object[] {
                        XMLInput}, this.MultiLocationCarrierPickupOperationCompleted, userState);
        }
        
        private void OnMultiLocationCarrierPickupOperationCompleted(object arg) {
            if ((this.MultiLocationCarrierPickupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MultiLocationCarrierPickupCompleted(this, new MultiLocationCarrierPickupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://els", ResponseNamespace="http://els")]
        [return: System.Xml.Serialization.SoapElementAttribute("CarrierPickupChangeReturn")]
        public object CarrierPickupChange(object XMLInput) {
            object[] results = this.Invoke("CarrierPickupChange", new object[] {
                        XMLInput});
            return ((object)(results[0]));
        }
        
        /// <remarks/>
        public void CarrierPickupChangeAsync(object XMLInput) {
            this.CarrierPickupChangeAsync(XMLInput, null);
        }
        
        /// <remarks/>
        public void CarrierPickupChangeAsync(object XMLInput, object userState) {
            if ((this.CarrierPickupChangeOperationCompleted == null)) {
                this.CarrierPickupChangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCarrierPickupChangeOperationCompleted);
            }
            this.InvokeAsync("CarrierPickupChange", new object[] {
                        XMLInput}, this.CarrierPickupChangeOperationCompleted, userState);
        }
        
        private void OnCarrierPickupChangeOperationCompleted(object arg) {
            if ((this.CarrierPickupChangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CarrierPickupChangeCompleted(this, new CarrierPickupChangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://els", ResponseNamespace="http://els")]
        [return: System.Xml.Serialization.SoapElementAttribute("CarrierPickupAvailabilityReturn")]
        public object CarrierPickupAvailability(object XMLInput) {
            object[] results = this.Invoke("CarrierPickupAvailability", new object[] {
                        XMLInput});
            return ((object)(results[0]));
        }
        
        /// <remarks/>
        public void CarrierPickupAvailabilityAsync(object XMLInput) {
            this.CarrierPickupAvailabilityAsync(XMLInput, null);
        }
        
        /// <remarks/>
        public void CarrierPickupAvailabilityAsync(object XMLInput, object userState) {
            if ((this.CarrierPickupAvailabilityOperationCompleted == null)) {
                this.CarrierPickupAvailabilityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCarrierPickupAvailabilityOperationCompleted);
            }
            this.InvokeAsync("CarrierPickupAvailability", new object[] {
                        XMLInput}, this.CarrierPickupAvailabilityOperationCompleted, userState);
        }
        
        private void OnCarrierPickupAvailabilityOperationCompleted(object arg) {
            if ((this.CarrierPickupAvailabilityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CarrierPickupAvailabilityCompleted(this, new CarrierPickupAvailabilityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://els", ResponseNamespace="http://els")]
        [return: System.Xml.Serialization.SoapElementAttribute("RefundRequestReturn")]
        public object RefundRequest(object XMLInput) {
            object[] results = this.Invoke("RefundRequest", new object[] {
                        XMLInput});
            return ((object)(results[0]));
        }
        
        /// <remarks/>
        public void RefundRequestAsync(object XMLInput) {
            this.RefundRequestAsync(XMLInput, null);
        }
        
        /// <remarks/>
        public void RefundRequestAsync(object XMLInput, object userState) {
            if ((this.RefundRequestOperationCompleted == null)) {
                this.RefundRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRefundRequestOperationCompleted);
            }
            this.InvokeAsync("RefundRequest", new object[] {
                        XMLInput}, this.RefundRequestOperationCompleted, userState);
        }
        
        private void OnRefundRequestOperationCompleted(object arg) {
            if ((this.RefundRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RefundRequestCompleted(this, new RefundRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://els", ResponseNamespace="http://els")]
        [return: System.Xml.Serialization.SoapElementAttribute("CarrierPickupCancelReturn")]
        public object CarrierPickupCancel(object XMLInput) {
            object[] results = this.Invoke("CarrierPickupCancel", new object[] {
                        XMLInput});
            return ((object)(results[0]));
        }
        
        /// <remarks/>
        public void CarrierPickupCancelAsync(object XMLInput) {
            this.CarrierPickupCancelAsync(XMLInput, null);
        }
        
        /// <remarks/>
        public void CarrierPickupCancelAsync(object XMLInput, object userState) {
            if ((this.CarrierPickupCancelOperationCompleted == null)) {
                this.CarrierPickupCancelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCarrierPickupCancelOperationCompleted);
            }
            this.InvokeAsync("CarrierPickupCancel", new object[] {
                        XMLInput}, this.CarrierPickupCancelOperationCompleted, userState);
        }
        
        private void OnCarrierPickupCancelOperationCompleted(object arg) {
            if ((this.CarrierPickupCancelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CarrierPickupCancelCompleted(this, new CarrierPickupCancelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://els", ResponseNamespace="http://els")]
        [return: System.Xml.Serialization.SoapElementAttribute("GetRetailAccountsReturn")]
        public object GetRetailAccounts(object XMLInput) {
            object[] results = this.Invoke("GetRetailAccounts", new object[] {
                        XMLInput});
            return ((object)(results[0]));
        }
        
        /// <remarks/>
        public void GetRetailAccountsAsync(object XMLInput) {
            this.GetRetailAccountsAsync(XMLInput, null);
        }
        
        /// <remarks/>
        public void GetRetailAccountsAsync(object XMLInput, object userState) {
            if ((this.GetRetailAccountsOperationCompleted == null)) {
                this.GetRetailAccountsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRetailAccountsOperationCompleted);
            }
            this.InvokeAsync("GetRetailAccounts", new object[] {
                        XMLInput}, this.GetRetailAccountsOperationCompleted, userState);
        }
        
        private void OnGetRetailAccountsOperationCompleted(object arg) {
            if ((this.GetRetailAccountsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRetailAccountsCompleted(this, new GetRetailAccountsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://els", ResponseNamespace="http://els")]
        [return: System.Xml.Serialization.SoapElementAttribute("StatusRequestReturn")]
        public object StatusRequest(object XMLInput) {
            object[] results = this.Invoke("StatusRequest", new object[] {
                        XMLInput});
            return ((object)(results[0]));
        }
        
        /// <remarks/>
        public void StatusRequestAsync(object XMLInput) {
            this.StatusRequestAsync(XMLInput, null);
        }
        
        /// <remarks/>
        public void StatusRequestAsync(object XMLInput, object userState) {
            if ((this.StatusRequestOperationCompleted == null)) {
                this.StatusRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStatusRequestOperationCompleted);
            }
            this.InvokeAsync("StatusRequest", new object[] {
                        XMLInput}, this.StatusRequestOperationCompleted, userState);
        }
        
        private void OnStatusRequestOperationCompleted(object arg) {
            if ((this.StatusRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StatusRequestCompleted(this, new StatusRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://els", ResponseNamespace="http://els")]
        [return: System.Xml.Serialization.SoapElementAttribute("UserSignupReturn")]
        public object UserSignup(object XMLInput) {
            object[] results = this.Invoke("UserSignup", new object[] {
                        XMLInput});
            return ((object)(results[0]));
        }
        
        /// <remarks/>
        public void UserSignupAsync(object XMLInput) {
            this.UserSignupAsync(XMLInput, null);
        }
        
        /// <remarks/>
        public void UserSignupAsync(object XMLInput, object userState) {
            if ((this.UserSignupOperationCompleted == null)) {
                this.UserSignupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserSignupOperationCompleted);
            }
            this.InvokeAsync("UserSignup", new object[] {
                        XMLInput}, this.UserSignupOperationCompleted, userState);
        }
        
        private void OnUserSignupOperationCompleted(object arg) {
            if ((this.UserSignupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserSignupCompleted(this, new UserSignupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://els", ResponseNamespace="http://els")]
        [return: System.Xml.Serialization.SoapElementAttribute("GetResellerTransactionsListingReturn")]
        public object GetResellerTransactionsListing(object XMLInput) {
            object[] results = this.Invoke("GetResellerTransactionsListing", new object[] {
                        XMLInput});
            return ((object)(results[0]));
        }
        
        /// <remarks/>
        public void GetResellerTransactionsListingAsync(object XMLInput) {
            this.GetResellerTransactionsListingAsync(XMLInput, null);
        }
        
        /// <remarks/>
        public void GetResellerTransactionsListingAsync(object XMLInput, object userState) {
            if ((this.GetResellerTransactionsListingOperationCompleted == null)) {
                this.GetResellerTransactionsListingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetResellerTransactionsListingOperationCompleted);
            }
            this.InvokeAsync("GetResellerTransactionsListing", new object[] {
                        XMLInput}, this.GetResellerTransactionsListingOperationCompleted, userState);
        }
        
        private void OnGetResellerTransactionsListingOperationCompleted(object arg) {
            if ((this.GetResellerTransactionsListingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetResellerTransactionsListingCompleted(this, new GetResellerTransactionsListingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://els", ResponseNamespace="http://els")]
        [return: System.Xml.Serialization.SoapElementAttribute("SCANRequestReturn")]
        public object SCANRequest(object XMLInput) {
            object[] results = this.Invoke("SCANRequest", new object[] {
                        XMLInput});
            return ((object)(results[0]));
        }
        
        /// <remarks/>
        public void SCANRequestAsync(object XMLInput) {
            this.SCANRequestAsync(XMLInput, null);
        }
        
        /// <remarks/>
        public void SCANRequestAsync(object XMLInput, object userState) {
            if ((this.SCANRequestOperationCompleted == null)) {
                this.SCANRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSCANRequestOperationCompleted);
            }
            this.InvokeAsync("SCANRequest", new object[] {
                        XMLInput}, this.SCANRequestOperationCompleted, userState);
        }
        
        private void OnSCANRequestOperationCompleted(object arg) {
            if ((this.SCANRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SCANRequestCompleted(this, new SCANRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://els", ResponseNamespace="http://els")]
        [return: System.Xml.Serialization.SoapElementAttribute("CarrierPickupRequestReturn")]
        public object CarrierPickupRequest(object XMLInput) {
            object[] results = this.Invoke("CarrierPickupRequest", new object[] {
                        XMLInput});
            return ((object)(results[0]));
        }
        
        /// <remarks/>
        public void CarrierPickupRequestAsync(object XMLInput) {
            this.CarrierPickupRequestAsync(XMLInput, null);
        }
        
        /// <remarks/>
        public void CarrierPickupRequestAsync(object XMLInput, object userState) {
            if ((this.CarrierPickupRequestOperationCompleted == null)) {
                this.CarrierPickupRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCarrierPickupRequestOperationCompleted);
            }
            this.InvokeAsync("CarrierPickupRequest", new object[] {
                        XMLInput}, this.CarrierPickupRequestOperationCompleted, userState);
        }
        
        private void OnCarrierPickupRequestOperationCompleted(object arg) {
            if ((this.CarrierPickupRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CarrierPickupRequestCompleted(this, new CarrierPickupRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://els", ResponseNamespace="http://els")]
        [return: System.Xml.Serialization.SoapElementAttribute("GetTransactionsListingReturn")]
        public object GetTransactionsListing(object XMLInput) {
            object[] results = this.Invoke("GetTransactionsListing", new object[] {
                        XMLInput});
            return ((object)(results[0]));
        }
        
        /// <remarks/>
        public void GetTransactionsListingAsync(object XMLInput) {
            this.GetTransactionsListingAsync(XMLInput, null);
        }
        
        /// <remarks/>
        public void GetTransactionsListingAsync(object XMLInput, object userState) {
            if ((this.GetTransactionsListingOperationCompleted == null)) {
                this.GetTransactionsListingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTransactionsListingOperationCompleted);
            }
            this.InvokeAsync("GetTransactionsListing", new object[] {
                        XMLInput}, this.GetTransactionsListingOperationCompleted, userState);
        }
        
        private void OnGetTransactionsListingOperationCompleted(object arg) {
            if ((this.GetTransactionsListingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTransactionsListingCompleted(this, new GetTransactionsListingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://rpc.xml.coldfusion")]
    public partial class QueryBean {
        
        private string[] columnListField;
        
        private object[] dataField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string[] columnList {
            get {
                return this.columnListField;
            }
            set {
                this.columnListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public object[] data {
            get {
                return this.dataField;
            }
            set {
                this.dataField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://rpc.xml.coldfusion")]
    public partial class CFCInvocationException {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://xml.apache.org/xml-soap")]
    public partial class Map {
        
        private mapItem[] itemField;
        
        /// <remarks/>
        public mapItem[] item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://xml.apache.org/xml-soap")]
    public partial class mapItem {
        
        private object keyField;
        
        private object valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public object key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public object value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void MultiLocationCarrierPickupCompletedEventHandler(object sender, MultiLocationCarrierPickupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MultiLocationCarrierPickupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MultiLocationCarrierPickupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CarrierPickupChangeCompletedEventHandler(object sender, CarrierPickupChangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CarrierPickupChangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CarrierPickupChangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CarrierPickupAvailabilityCompletedEventHandler(object sender, CarrierPickupAvailabilityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CarrierPickupAvailabilityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CarrierPickupAvailabilityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void RefundRequestCompletedEventHandler(object sender, RefundRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RefundRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RefundRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CarrierPickupCancelCompletedEventHandler(object sender, CarrierPickupCancelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CarrierPickupCancelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CarrierPickupCancelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetRetailAccountsCompletedEventHandler(object sender, GetRetailAccountsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRetailAccountsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRetailAccountsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void StatusRequestCompletedEventHandler(object sender, StatusRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StatusRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StatusRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UserSignupCompletedEventHandler(object sender, UserSignupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserSignupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UserSignupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetResellerTransactionsListingCompletedEventHandler(object sender, GetResellerTransactionsListingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetResellerTransactionsListingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetResellerTransactionsListingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SCANRequestCompletedEventHandler(object sender, SCANRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SCANRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SCANRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CarrierPickupRequestCompletedEventHandler(object sender, CarrierPickupRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CarrierPickupRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CarrierPickupRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetTransactionsListingCompletedEventHandler(object sender, GetTransactionsListingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTransactionsListingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTransactionsListingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591